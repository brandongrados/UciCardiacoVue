{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\src\\components\\Enfermedad.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\src\\components\\Enfermedad.vue","mtime":1591430722651},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n    data(){\n        return {\n            enfermedades: [],\n            dialog: false,\n            headers: [\n            \n                { text: 'Opciones', value: 'opciones', sortable: false }, \n                { text: 'Nombre', value: 'nombre' },\n                { text: 'Descripcion', value: 'descripcion', sortable: false },\n                { text: 'Estado', value: 'condicion', sortable: false },\n            \n            ],\n            search: '',\n            editedIndex: -1,\n            \n            id:'',\n            nombre:'',\n            descripcion:'',\n            valida: 0,\n            validaMensaje:[],\n            adModal:0,\n            adAccion:0,\n            adNombre:'',\n            adId:''\n          \n        }\n    },\n    computed: {\n        formTitle () {\n        return this.editedIndex === -1 ? 'Nueva Enfermedad' : 'Actualizar enfermedad'\n        }\n    },\n\n    watch: {\n        dialog (val) {\n        val || this.close()\n        }\n    },\n\n    created () {\n        this.listar();\n    },\n    methods:{\n\n        listar ()   {\n            let me=this;\n             axios.get('api/Enfermedades/Listar').then(function(response)  {\n                   //console.log(response);\n                   me.enfermedades=response.data;\n             }).catch(function(error)   {\n                   console.log(error);\n             });\n        },\n\n        editItem (item) {\n            this.id=item.idenfermedad;\n            this.nombre=item.nombre;\n            this.descripcion=item.descripcion;\n            this.editedIndex=1;\n            this.dialog = true\n        },\n\n        deleteItem (item) {\n            const index = this.desserts.indexOf(item)\n            confirm('Are you sure you want to delete this item?') && this.desserts.splice(index, 1)\n        },\n\n        close () {\n            this.dialog = false;\n            this.limpiar();\n        },\n\n        limpiar()   {\n            this.id=\"\";\n            this.nombre=\"\";\n            this.descripcion=\"\";\n            this.editedIndex=-1;\n        },\n\n        guardar () {\n            if(this.validar())    {\n                return;\n            }\n            if (this.editedIndex > -1) {\n                //Código para editar\n                let me=this;\n                axios.put('api/Enfermedades/Actualizar',{\n                    'idenfermedad':me.id,\n                    'nombre':me.nombre,\n                    'descripcion':me.descripcion\n\n                }).then(function(response)  {\n                    me.close();\n                    me.listar();\n                    me.limpiar();\n                }).catch(function(error)   {\n                    console.log(error)\n                });\n\n            } else {\n                //Código para guardar\n                let me=this;\n                axios.post('api/Enfermedades/Crear',{\n                    'nombre':me.nombre,\n                    'descripcion':me.descripcion\n\n                }).then(function(response)  {\n                    me.close();\n                    me.listar();\n                    me.limpiar();\n                }).catch(function(error)   {\n                    console.log(error)\n                });\n\n            }\n            \n        },\n\n        validar()   {\n            this.valida=0;\n            this.validaMensaje=[];\n\n            if(this.nombre.length<3 || this.nombre.length>50)    {\n                this.validaMensaje.push(\"El nombre debe tener más de 3 caracteres y menos de 50 caracteres\");\n\n            }\n            if(this.validaMensaje.length)   {\n                this.valida=1;\n            }\n            return this.valida;\n        },\n        activarDesactivarMostrar(accion,item)  {\n            this.adModal=1;\n            this.adNombre=item.nombre;\n            this.adId=item.idenfermedad;\n\n            if(accion==1)   {\n                this.adAccion=1;\n            }else if(accion==2) {\n                this.adAccion=2;\n            }\n            else{\n                this.adAccion=0;\n            }\n        },\n        activarDesactivarCerrar()   {\n            this.adModal=0;\n        },\n        activar()   {\n            let me=this;\n            axios.put('api/Enfermedades/Activar/'+this.adId,{}).then(function(response)  {\n                me.adModal=0;\n                me.adAccion=0;\n                me.adNombre='';\n                me.adId='';\n                me.listar();\n            }).catch(function(error)   {\n                console.log(error)\n            });\n\n        },\n        desactivar()    {\n            let me=this;\n            axios.put('api/Enfermedades/Desactivar/'+this.adId,{}).then(function(response)  {\n                me.adModal=0;\n                me.adAccion=0;\n                me.adNombre='';\n                me.adId='';\n                me.listar();\n            }).catch(function(error)   {\n                console.log(error)\n            });\n\n        }\n    }        \n}\n",{"version":3,"sources":["Enfermedad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Enfermedad.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <v-layout align-start>\r\n        <v-flex>\r\n            <v-toolbar flat color=\"white\">\r\n                <v-toolbar-title>Enfermedades</v-toolbar-title>\r\n                    <v-divider\r\n                    class=\"mx-2\"\r\n                    inset\r\n                    vertical\r\n                    ></v-divider>\r\n                    <v-spacer></v-spacer>\r\n                    <v-text-field class=\"text-xs-center\" v-model=\"search\" append-icon=\"search\" label=\"Búsqueda\" single-line hide-details></v-text-field>\r\n                    <v-spacer></v-spacer>\r\n                    <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n                        <v-btn slot=\"activator\" color=\"primary\" dark class=\"mb-2\">Nuevo</v-btn>\r\n                            <v-card>\r\n                                <v-card-title>\r\n                                <span class=\"headline\">{{ formTitle }}</span>\r\n                                </v-card-title>\r\n                    \r\n                                <v-card-text>\r\n                                <v-container grid-list-md>\r\n                                    <v-layout wrap>\r\n                                    <v-flex xs12 sm12 md12>\r\n                                        <v-text-field v-model=\"nombre\" label=\"Nombre\"></v-text-field>\r\n                                    </v-flex>\r\n                                    <v-flex xs12 sm12 md12>\r\n                                        <v-text-field v-model=\"descripcion\" label=\"Descripcion\"></v-text-field>\r\n                                    </v-flex>\r\n                                    <v-flex xs12 sm12 md12 v-show=\"valida\">\r\n                                        <div class=\"red--text\" v-for=\"v in validaMensaje\" :key=\"v\" v-text=\"v\">\r\n                                        </div>\r\n                                    </v-flex>\r\n                                \r\n                                    </v-layout>\r\n                                </v-container>\r\n                                </v-card-text>\r\n                    \r\n                                <v-card-actions>\r\n                                    <v-spacer></v-spacer>\r\n                                    <v-btn color=\"blue darken-1\" flat @click.native=\"close\">Cancelar</v-btn>\r\n                                    <v-btn color=\"blue darken-1\" flat @click.native=\"guardar\">Guardar</v-btn>\r\n                                </v-card-actions>\r\n                            </v-card>\r\n                    </v-dialog>\r\n                    <v-dialog v-model=\"adModal\" max-width=\"290\">\r\n                        <v-card>\r\n                            <v-card-title class=\"headline\" v-if=\"adAccion==1\">¿Activar Item?</v-card-title>\r\n                            <v-card-title class=\"headline\" v-if=\"adAccion==2\">¿Desactivar Item?</v-card-title>\r\n                            <v-card-text>\r\n                                Estas a  punto de \r\n                                <span v-if=\"adAccion==1\">Activar</span>\r\n                                <span v-if=\"adAccion==2\">Desactivar</span>\r\n                                el ítem  {{adNombre}}\r\n                            </v-card-text>\r\n                        \r\n                            <v-card-actions>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn color=\"green darken-1\" flat=\"flat\" @click=\"activarDesactivarCerrar\">\r\n                                    Cancelar\r\n                                </v-btn>\r\n                                <v-btn v-if=\"adAccion==1\" color=\"orange darken-4\" flat=\"flat\" @click=\"activar\">\r\n                                    Activar\r\n                                </v-btn>\r\n                                <v-btn v-if=\"adAccion==2\" color=\"orange darken-4\" flat=\"flat\" @click=\"desactivar\">\r\n                                    Desactivar\r\n                                </v-btn>\r\n                            </v-card-actions>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                </v-toolbar>\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"enfermedades\"\r\n                :search=\"search\"\r\n                class=\"elevation-1\"\r\n            >\r\n                <template slot=\"items\" slot-scope=\"props\">\r\n                    <td class=\"justify-center layout px-0\">\r\n                        <v-icon\r\n                        small\r\n                        class=\"mr-2\"\r\n                        @click=\"editItem(props.item)\"\r\n                        >\r\n                        edit\r\n                        </v-icon>\r\n                        <template v-if=\"props.item.condicion\">\r\n                            <v-icon\r\n                            small\r\n                            @click=\"activarDesactivarMostrar(2,props.item)\"\r\n                            >\r\n                            block\r\n                            </v-icon>\r\n                        </template>\r\n                        <template v-else>\r\n                            <v-icon\r\n                            small\r\n                            @click=\"activarDesactivarMostrar(1,props.item)\"\r\n                            >\r\n                            check\r\n                            </v-icon>\r\n                        </template>\r\n                    </td>\r\n                    <td>{{ props.item.nombre }}</td>\r\n                    <td>{{ props.item.descripcion }}</td>\r\n                    <td>\r\n                        <div v-if=\"props.item.condicion\">\r\n                            <span class=\"blue--text\">Activo</span>\r\n                        </div>\r\n                        <div v-else>\r\n                            <span class=\"red--text\">Inactivo</span>\r\n                        </div>\r\n                    </td>\r\n               \r\n               \r\n                </template>\r\n                <template slot=\"no-data\">\r\n                <v-btn color=\"primary\" @click=\"listar\">Resetear</v-btn>\r\n                </template>\r\n            </v-data-table>\r\n        </v-flex>\r\n    </v-layout>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    export default {\r\n        data(){\r\n            return {\r\n                enfermedades: [],\r\n                dialog: false,\r\n                headers: [\r\n                \r\n                    { text: 'Opciones', value: 'opciones', sortable: false }, \r\n                    { text: 'Nombre', value: 'nombre' },\r\n                    { text: 'Descripcion', value: 'descripcion', sortable: false },\r\n                    { text: 'Estado', value: 'condicion', sortable: false },\r\n                \r\n                ],\r\n                search: '',\r\n                editedIndex: -1,\r\n                \r\n                id:'',\r\n                nombre:'',\r\n                descripcion:'',\r\n                valida: 0,\r\n                validaMensaje:[],\r\n                adModal:0,\r\n                adAccion:0,\r\n                adNombre:'',\r\n                adId:''\r\n              \r\n            }\r\n        },\r\n        computed: {\r\n            formTitle () {\r\n            return this.editedIndex === -1 ? 'Nueva Enfermedad' : 'Actualizar enfermedad'\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            dialog (val) {\r\n            val || this.close()\r\n            }\r\n        },\r\n\r\n        created () {\r\n            this.listar();\r\n        },\r\n        methods:{\r\n\r\n            listar ()   {\r\n                let me=this;\r\n                 axios.get('api/Enfermedades/Listar').then(function(response)  {\r\n                       //console.log(response);\r\n                       me.enfermedades=response.data;\r\n                 }).catch(function(error)   {\r\n                       console.log(error);\r\n                 });\r\n            },\r\n\r\n            editItem (item) {\r\n                this.id=item.idenfermedad;\r\n                this.nombre=item.nombre;\r\n                this.descripcion=item.descripcion;\r\n                this.editedIndex=1;\r\n                this.dialog = true\r\n            },\r\n\r\n            deleteItem (item) {\r\n                const index = this.desserts.indexOf(item)\r\n                confirm('Are you sure you want to delete this item?') && this.desserts.splice(index, 1)\r\n            },\r\n\r\n            close () {\r\n                this.dialog = false;\r\n                this.limpiar();\r\n            },\r\n\r\n            limpiar()   {\r\n                this.id=\"\";\r\n                this.nombre=\"\";\r\n                this.descripcion=\"\";\r\n                this.editedIndex=-1;\r\n            },\r\n\r\n            guardar () {\r\n                if(this.validar())    {\r\n                    return;\r\n                }\r\n                if (this.editedIndex > -1) {\r\n                    //Código para editar\r\n                    let me=this;\r\n                    axios.put('api/Enfermedades/Actualizar',{\r\n                        'idenfermedad':me.id,\r\n                        'nombre':me.nombre,\r\n                        'descripcion':me.descripcion\r\n\r\n                    }).then(function(response)  {\r\n                        me.close();\r\n                        me.listar();\r\n                        me.limpiar();\r\n                    }).catch(function(error)   {\r\n                        console.log(error)\r\n                    });\r\n\r\n                } else {\r\n                    //Código para guardar\r\n                    let me=this;\r\n                    axios.post('api/Enfermedades/Crear',{\r\n                        'nombre':me.nombre,\r\n                        'descripcion':me.descripcion\r\n\r\n                    }).then(function(response)  {\r\n                        me.close();\r\n                        me.listar();\r\n                        me.limpiar();\r\n                    }).catch(function(error)   {\r\n                        console.log(error)\r\n                    });\r\n\r\n                }\r\n                \r\n            },\r\n\r\n            validar()   {\r\n                this.valida=0;\r\n                this.validaMensaje=[];\r\n\r\n                if(this.nombre.length<3 || this.nombre.length>50)    {\r\n                    this.validaMensaje.push(\"El nombre debe tener más de 3 caracteres y menos de 50 caracteres\");\r\n\r\n                }\r\n                if(this.validaMensaje.length)   {\r\n                    this.valida=1;\r\n                }\r\n                return this.valida;\r\n            },\r\n            activarDesactivarMostrar(accion,item)  {\r\n                this.adModal=1;\r\n                this.adNombre=item.nombre;\r\n                this.adId=item.idenfermedad;\r\n\r\n                if(accion==1)   {\r\n                    this.adAccion=1;\r\n                }else if(accion==2) {\r\n                    this.adAccion=2;\r\n                }\r\n                else{\r\n                    this.adAccion=0;\r\n                }\r\n            },\r\n            activarDesactivarCerrar()   {\r\n                this.adModal=0;\r\n            },\r\n            activar()   {\r\n                let me=this;\r\n                axios.put('api/Enfermedades/Activar/'+this.adId,{}).then(function(response)  {\r\n                    me.adModal=0;\r\n                    me.adAccion=0;\r\n                    me.adNombre='';\r\n                    me.adId='';\r\n                    me.listar();\r\n                }).catch(function(error)   {\r\n                    console.log(error)\r\n                });\r\n\r\n            },\r\n            desactivar()    {\r\n                let me=this;\r\n                axios.put('api/Enfermedades/Desactivar/'+this.adId,{}).then(function(response)  {\r\n                    me.adModal=0;\r\n                    me.adAccion=0;\r\n                    me.adNombre='';\r\n                    me.adId='';\r\n                    me.listar();\r\n                }).catch(function(error)   {\r\n                    console.log(error)\r\n                });\r\n\r\n            }\r\n        }        \r\n    }\r\n</script>\r\n"]}]}