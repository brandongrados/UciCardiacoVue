{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\src\\components\\Enfermedad.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\src\\components\\Enfermedad.vue","mtime":1591352791579},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1541050042000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import axios from 'axios'\n    export default {\n        data(){\n            return {\n                enfermedades: [],\n                dialog: false,\n                headers: [\n                \n                    { text: 'Opciones', value: 'opciones', sortable: false }, \n                    { text: 'Nombre', value: 'nombre' },\n                    { text: 'Descripcion', value: 'descripcion', sortable: false },\n                    { text: 'Estado', value: 'condicion', sortable: false },\n                \n                ],\n                search: '',\n                editedIndex: -1,\n                editedItem: {\n                    name: '',\n                    calories: 0,\n                    fat: 0,\n                    carbs: 0,\n                    protein: 0\n                },\n                id:'',\n                nombre:'',\n                descripcion:''\n              \n            }\n        },\n        computed: {\n            formTitle () {\n            return this.editedIndex === -1 ? 'Nueva Enfermedad' : 'Actualizar enfermedad'\n            }\n        },\n\n        watch: {\n            dialog (val) {\n            val || this.close()\n            }\n        },\n\n        created () {\n            this.listar();\n        },\n        methods:{\n\n            listar ()   {\n                let me=this;\n                 axios.get('api/Enfermedades/Listar').then(function(response)  {\n                       //console.log(response);\n                       me.enfermedades=response.data;\n                 }).catch(function(error)   {\n                       console.log(error);\n                 });\n            },\n\n            editItem (item) {\n                this.editedIndex = this.desserts.indexOf(item)\n                this.editedItem = Object.assign({}, item)\n                this.dialog = true\n            },\n\n            deleteItem (item) {\n                const index = this.desserts.indexOf(item)\n                confirm('Are you sure you want to delete this item?') && this.desserts.splice(index, 1)\n            },\n\n            close () {\n                this.dialog = false\n                setTimeout(() => {\n                    this.editedItem = Object.assign({}, this.defaultItem)\n                    this.editedIndex = -1\n                }, 300)\n            },\n\n            limpiar()   {\n                this.id=\"\";\n                this.nombre=\"\";\n                this.descripcion=\"\";\n            },\n\n            guardar () {\n                if (this.editedIndex > -1) {\n                    //Código para editar\n                } else {\n                    //Código para guardar\n                    let me=this;\n                    axios.post('api/Enfermedades/Crear',{\n                        'nombre':me.nombre,\n                        'descripcion':me.descripcion\n\n                    }).then(function(response)  {\n                        me.close();\n                        me.listar();\n                        me.limpiar();\n                    }).catch(function(error)   {\n                        console.log(error)\n                    });\ns\n                }\n                this.close()\n            }\n        }        \n    }\n",{"version":3,"sources":["Enfermedad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Enfermedad.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <v-layout align-start>\r\n        <v-flex>\r\n            <v-toolbar flat color=\"white\">\r\n                <v-toolbar-title>Enfermedades</v-toolbar-title>\r\n                    <v-divider\r\n                    class=\"mx-2\"\r\n                    inset\r\n                    vertical\r\n                    ></v-divider>\r\n                    <v-spacer></v-spacer>\r\n                    <v-text-field class=\"text-xs-center\" v-model=\"search\" append-icon=\"search\" label=\"Búsqueda\" single-line hide-details></v-text-field>\r\n                    <v-spacer></v-spacer>\r\n                    <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n                    <v-btn slot=\"activator\" color=\"primary\" dark class=\"mb-2\">Nuevo</v-btn>\r\n                        <v-card>\r\n                            <v-card-title>\r\n                            <span class=\"headline\">{{ formTitle }}</span>\r\n                            </v-card-title>\r\n                \r\n                            <v-card-text>\r\n                            <v-container grid-list-md>\r\n                                <v-layout wrap>\r\n                                <v-flex xs12 sm12 md12>\r\n                                    <v-text-field v-model=\"nombre\" label=\"Nombre\"></v-text-field>\r\n                                </v-flex>\r\n                                <v-flex xs12 sm12 md12>\r\n                                    <v-text-field v-model=\"descripcion\" label=\"Descripcion\"></v-text-field>\r\n                                </v-flex>\r\n                            \r\n                                </v-layout>\r\n                            </v-container>\r\n                            </v-card-text>\r\n                \r\n                            <v-card-actions>\r\n                                <v-spacer></v-spacer>\r\n                                <v-btn color=\"blue darken-1\" flat @click.native=\"close\">Cancelar</v-btn>\r\n                                <v-btn color=\"blue darken-1\" flat @click.native=\"guardar\">Guardar</v-btn>\r\n                            </v-card-actions>\r\n                        </v-card>\r\n                    </v-dialog>\r\n                </v-toolbar>\r\n            <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"enfermedades\"\r\n                :search=\"search\"\r\n                class=\"elevation-1\"\r\n            >\r\n                <template slot=\"items\" slot-scope=\"props\">\r\n                    <td class=\"justify-center layout px-0\">\r\n                        <v-icon\r\n                        small\r\n                        class=\"mr-2\"\r\n                        @click=\"editItem(props.item)\"\r\n                        >\r\n                        edit\r\n                        </v-icon>\r\n                        <v-icon\r\n                        small\r\n                        @click=\"deleteItem(props.item)\"\r\n                        >\r\n                        delete\r\n                        </v-icon>\r\n                    </td>\r\n                    <td>{{ props.item.nombre }}</td>\r\n                    <td>{{ props.item.descripcion }}</td>\r\n                    <td>\r\n                        <div v-if=\"props.item.condicion\">\r\n                            <span class=\"blue--text\">Activo</span>\r\n                        </div>\r\n                        <div v-else>\r\n                            <span class=\"red--text\">Inactivo</span>\r\n                        </div>\r\n                    </td>\r\n               \r\n               \r\n                </template>\r\n                <template slot=\"no-data\">\r\n                <v-btn color=\"primary\" @click=\"initialize\">Resetear</v-btn>\r\n                </template>\r\n            </v-data-table>\r\n        </v-flex>\r\n    </v-layout>\r\n</template>\r\n<script>\r\n    import axios from 'axios'\r\n    export default {\r\n        data(){\r\n            return {\r\n                enfermedades: [],\r\n                dialog: false,\r\n                headers: [\r\n                \r\n                    { text: 'Opciones', value: 'opciones', sortable: false }, \r\n                    { text: 'Nombre', value: 'nombre' },\r\n                    { text: 'Descripcion', value: 'descripcion', sortable: false },\r\n                    { text: 'Estado', value: 'condicion', sortable: false },\r\n                \r\n                ],\r\n                search: '',\r\n                editedIndex: -1,\r\n                editedItem: {\r\n                    name: '',\r\n                    calories: 0,\r\n                    fat: 0,\r\n                    carbs: 0,\r\n                    protein: 0\r\n                },\r\n                id:'',\r\n                nombre:'',\r\n                descripcion:''\r\n              \r\n            }\r\n        },\r\n        computed: {\r\n            formTitle () {\r\n            return this.editedIndex === -1 ? 'Nueva Enfermedad' : 'Actualizar enfermedad'\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            dialog (val) {\r\n            val || this.close()\r\n            }\r\n        },\r\n\r\n        created () {\r\n            this.listar();\r\n        },\r\n        methods:{\r\n\r\n            listar ()   {\r\n                let me=this;\r\n                 axios.get('api/Enfermedades/Listar').then(function(response)  {\r\n                       //console.log(response);\r\n                       me.enfermedades=response.data;\r\n                 }).catch(function(error)   {\r\n                       console.log(error);\r\n                 });\r\n            },\r\n\r\n            editItem (item) {\r\n                this.editedIndex = this.desserts.indexOf(item)\r\n                this.editedItem = Object.assign({}, item)\r\n                this.dialog = true\r\n            },\r\n\r\n            deleteItem (item) {\r\n                const index = this.desserts.indexOf(item)\r\n                confirm('Are you sure you want to delete this item?') && this.desserts.splice(index, 1)\r\n            },\r\n\r\n            close () {\r\n                this.dialog = false\r\n                setTimeout(() => {\r\n                    this.editedItem = Object.assign({}, this.defaultItem)\r\n                    this.editedIndex = -1\r\n                }, 300)\r\n            },\r\n\r\n            limpiar()   {\r\n                this.id=\"\";\r\n                this.nombre=\"\";\r\n                this.descripcion=\"\";\r\n            },\r\n\r\n            guardar () {\r\n                if (this.editedIndex > -1) {\r\n                    //Código para editar\r\n                } else {\r\n                    //Código para guardar\r\n                    let me=this;\r\n                    axios.post('api/Enfermedades/Crear',{\r\n                        'nombre':me.nombre,\r\n                        'descripcion':me.descripcion\r\n\r\n                    }).then(function(response)  {\r\n                        me.close();\r\n                        me.listar();\r\n                        me.limpiar();\r\n                    }).catch(function(error)   {\r\n                        console.log(error)\r\n                    });\r\ns\r\n                }\r\n                this.close()\r\n            }\r\n        }        \r\n    }\r\n</script>\r\n"]}]}