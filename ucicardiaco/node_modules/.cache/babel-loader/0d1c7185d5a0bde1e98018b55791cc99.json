{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\Vuetify\\index.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\Vuetify\\index.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport OurVue from 'vue';\nimport application from './mixins/application';\nimport breakpoint from './mixins/breakpoint';\nimport theme from './mixins/theme';\nimport icons from './mixins/icons';\nimport options from './mixins/options';\nimport genLang from './mixins/lang';\nimport goTo from './util/goTo'; // Utils\n\nimport { consoleWarn, consoleError } from '../../util/console';\nvar Vuetify = {\n  install: function install(Vue) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.installed) return;\n    this.installed = true;\n\n    if (OurVue !== Vue) {\n      consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this');\n    }\n\n    checkVueVersion(Vue);\n    var lang = genLang(opts.lang);\n    Vue.prototype.$vuetify = new Vue({\n      mixins: [breakpoint],\n      data: {\n        application: application,\n        dark: false,\n        icons: icons(opts.iconfont, opts.icons),\n        lang: lang,\n        options: options(opts.options),\n        rtl: opts.rtl,\n        theme: theme(opts.theme)\n      },\n      methods: {\n        goTo: goTo,\n        t: lang.t.bind(lang)\n      }\n    });\n\n    if (opts.directives) {\n      for (var name in opts.directives) {\n        Vue.directive(name, opts.directives[name]);\n      }\n    }\n\n    (function registerComponents(components) {\n      if (components) {\n        for (var key in components) {\n          var component = components[key];\n\n          if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n            Vue.component(key, component);\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    })(opts.components);\n  },\n  version: '1.3.9'\n};\nexport function checkVueVersion(Vue, requiredVue) {\n  var vueDep = requiredVue || '^2.5.10';\n  var required = vueDep.split('.', 3).map(function (v) {\n    return v.replace(/\\D/g, '');\n  }).map(Number);\n  var actual = Vue.version.split('.', 3).map(function (n) {\n    return parseInt(n, 10);\n  }); // Simple semver caret range comparison\n\n  var passes = actual[0] === required[0] && ( // major matches\n  actual[1] > required[1] || // minor is greater\n  actual[1] === required[1] && actual[2] >= required[2] // or minor is eq and patch is >=\n  );\n\n  if (!passes) {\n    consoleWarn('Vuetify requires Vue version ' + vueDep);\n  }\n}\nexport default Vuetify;",{"version":3,"sources":["../../../src/components/Vuetify/index.ts"],"names":[],"mappings":"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","sourcesContent":["import OurVue from 'vue'\n\nimport application from './mixins/application'\nimport breakpoint from './mixins/breakpoint'\nimport theme from './mixins/theme'\nimport icons from './mixins/icons'\nimport options from './mixins/options'\nimport genLang from './mixins/lang'\nimport goTo from './util/goTo'\n\n// Utils\nimport { consoleWarn, consoleError } from '../../util/console'\n\n// Types\nimport { VueConstructor } from 'vue/types'\nimport { Vuetify as VuetifyPlugin, VuetifyUseOptions } from 'vuetify/types'\n\nconst Vuetify: VuetifyPlugin = {\n  install (Vue, opts = {}) {\n    if ((this as any).installed) return\n    ;(this as any).installed = true\n\n    if (OurVue !== Vue) {\n      consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this')\n    }\n\n    checkVueVersion(Vue)\n\n    const lang = genLang(opts.lang)\n\n    Vue.prototype.$vuetify = new Vue({\n      mixins: [\n        breakpoint\n      ],\n      data: {\n        application,\n        dark: false,\n        icons: icons(opts.iconfont, opts.icons),\n        lang,\n        options: options(opts.options),\n        rtl: opts.rtl,\n        theme: theme(opts.theme)\n      },\n      methods: {\n        goTo,\n        t: lang.t.bind(lang)\n      }\n    })\n\n    if (opts.directives) {\n      for (const name in opts.directives) {\n        Vue.directive(name, opts.directives[name])\n      }\n    }\n\n    (function registerComponents (components: VuetifyUseOptions['components']) {\n      if (components) {\n        for (const key in components) {\n          const component = components[key]\n          if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n            Vue.component(key, component as typeof Vue)\n          }\n        }\n        return true\n      }\n      return false\n    })(opts.components)\n  },\n  version: __VUETIFY_VERSION__\n}\n\nexport function checkVueVersion (Vue: VueConstructor, requiredVue?: string) {\n  const vueDep = requiredVue || __REQUIRED_VUE__\n\n  const required = vueDep.split('.', 3).map(v => v.replace(/\\D/g, '')).map(Number)\n  const actual = Vue.version.split('.', 3).map(n => parseInt(n, 10))\n\n  // Simple semver caret range comparison\n  const passes =\n    actual[0] === required[0] && // major matches\n    (actual[1] > required[1] || // minor is greater\n      (actual[1] === required[1] && actual[2] >= required[2]) // or minor is eq and patch is >=\n    )\n\n  if (!passes) {\n    consoleWarn(`Vuetify requires Vue version ${vueDep}`)\n  }\n}\n\nexport default Vuetify\n"],"sourceRoot":""}]}