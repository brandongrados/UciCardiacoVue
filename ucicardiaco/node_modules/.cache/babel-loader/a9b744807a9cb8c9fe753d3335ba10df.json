{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VMenu\\VMenu.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VMenu\\VMenu.js","mtime":1589651992461},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import '../../../src/stylus/components/_menus.styl';\nimport Vue from 'vue'; // Mixins\n\nimport Delayable from '../../mixins/delayable';\nimport Dependent from '../../mixins/dependent';\nimport Detachable from '../../mixins/detachable';\nimport Menuable from '../../mixins/menuable.js';\nimport Returnable from '../../mixins/returnable';\nimport Toggleable from '../../mixins/toggleable';\nimport Themeable from '../../mixins/themeable'; // Component level mixins\n\nimport Activator from './mixins/menu-activator';\nimport Generators from './mixins/menu-generators';\nimport Keyable from './mixins/menu-keyable';\nimport Position from './mixins/menu-position'; // Directives\n\nimport ClickOutside from '../../directives/click-outside';\nimport Resize from '../../directives/resize'; // Helpers\n\nimport { convertToUnit } from '../../util/helpers';\nimport ThemeProvider from '../../util/ThemeProvider';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'v-menu',\n  provide: function provide() {\n    return {\n      // Pass theme through to default slot\n      theme: this.theme\n    };\n  },\n  directives: {\n    ClickOutside: ClickOutside,\n    Resize: Resize\n  },\n  mixins: [Activator, Dependent, Delayable, Detachable, Generators, Keyable, Menuable, Position, Returnable, Toggleable, Themeable],\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true\n    },\n    disabled: Boolean,\n    fullWidth: Boolean,\n    maxHeight: {\n      default: 'auto'\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition'\n    }\n  },\n  data: function data() {\n    return {\n      defaultOffset: 8,\n      maxHeightAutoDefault: '200px',\n      startIndex: 3,\n      stopIndex: 0,\n      hasJustFocused: false,\n      resizeTimeout: null\n    };\n  },\n  computed: {\n    calculatedLeft: function calculatedLeft() {\n      if (!this.auto) return this.calcLeft();\n      return this.calcXOverflow(this.calcLeftAuto()) + 'px';\n    },\n    calculatedMaxHeight: function calculatedMaxHeight() {\n      return this.auto ? '200px' : convertToUnit(this.maxHeight);\n    },\n    calculatedMaxWidth: function calculatedMaxWidth() {\n      return isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px';\n    },\n    calculatedMinWidth: function calculatedMinWidth() {\n      if (this.minWidth) {\n        return isNaN(this.minWidth) ? this.minWidth : this.minWidth + 'px';\n      }\n\n      var minWidth = this.dimensions.activator.width + this.nudgeWidth + (this.auto ? 16 : 0);\n      var calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth)) ? minWidth : parseInt(this.calculatedMaxWidth);\n      return Math.min(calculatedMaxWidth, minWidth) + 'px';\n    },\n    calculatedTop: function calculatedTop() {\n      if (!this.auto || this.isAttached) return this.calcTop();\n      return this.calcYOverflow(this.calcTopAuto()) + 'px';\n    },\n    styles: function styles() {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex\n      };\n    },\n    tileHeight: function tileHeight() {\n      return this.dense ? 36 : 48;\n    }\n  },\n  watch: {\n    activator: function activator(newActivator, oldActivator) {\n      this.removeActivatorEvents(oldActivator);\n      this.addActivatorEvents(newActivator);\n    },\n    isContentActive: function isContentActive(val) {\n      this.hasJustFocused = val;\n    }\n  },\n  methods: {\n    activate: function activate() {\n      // This exists primarily for v-select\n      // helps determine which tiles to activate\n      this.getTiles(); // Update coordinates and dimensions of menu\n      // and its activator\n\n      this.updateDimensions(); // Start the transition\n\n      requestAnimationFrame(this.startTransition); // Once transitioning, calculate scroll position\n\n      setTimeout(this.calculateScroll, 50);\n    },\n    closeConditional: function closeConditional() {\n      return this.isActive && this.closeOnClick;\n    },\n    onResize: function onResize() {\n      if (!this.isActive) return; // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n\n      this.$refs.content.offsetWidth;\n      this.updateDimensions(); // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.updateDimensions, 100);\n    }\n  },\n  render: function render(h) {\n    var data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--inline': !this.fullWidth && this.$slots.activator\n      },\n      directives: [{\n        arg: 500,\n        name: 'resize',\n        value: this.onResize\n      }],\n      on: {\n        keydown: this.onKeyDown\n      }\n    };\n    return h('div', data, [this.genActivator(), this.$createElement(ThemeProvider, {\n      props: {\n        root: true,\n        light: this.light,\n        dark: this.dark\n      }\n    }, [this.genTransition()])]);\n  }\n});",{"version":3,"sources":["../../../src/components/VMenu/VMenu.js"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_menus.styl'\n\nimport Vue from 'vue'\n\n// Mixins\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable.js'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Component level mixins\nimport Activator from './mixins/menu-activator'\nimport Generators from './mixins/menu-generators'\nimport Keyable from './mixins/menu-keyable'\nimport Position from './mixins/menu-position'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-menu',\n\n  provide () {\n    return {\n      // Pass theme through to default slot\n      theme: this.theme\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize\n  },\n\n  mixins: [\n    Activator,\n    Dependent,\n    Delayable,\n    Detachable,\n    Generators,\n    Keyable,\n    Menuable,\n    Position,\n    Returnable,\n    Toggleable,\n    Themeable\n  ],\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true\n    },\n    disabled: Boolean,\n    fullWidth: Boolean,\n    maxHeight: { default: 'auto' },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition'\n    }\n  },\n\n  data () {\n    return {\n      defaultOffset: 8,\n      maxHeightAutoDefault: '200px',\n      startIndex: 3,\n      stopIndex: 0,\n      hasJustFocused: false,\n      resizeTimeout: null\n    }\n  },\n\n  computed: {\n    calculatedLeft () {\n      if (!this.auto) return this.calcLeft()\n\n      return `${this.calcXOverflow(this.calcLeftAuto())}px`\n    },\n    calculatedMaxHeight () {\n      return this.auto ? '200px' : convertToUnit(this.maxHeight)\n    },\n    calculatedMaxWidth () {\n      return isNaN(this.maxWidth)\n        ? this.maxWidth\n        : `${this.maxWidth}px`\n    },\n    calculatedMinWidth () {\n      if (this.minWidth) {\n        return isNaN(this.minWidth)\n          ? this.minWidth\n          : `${this.minWidth}px`\n      }\n\n      const minWidth = (\n        this.dimensions.activator.width +\n        this.nudgeWidth +\n        (this.auto ? 16 : 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return `${Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )}px`\n    },\n    calculatedTop () {\n      if (!this.auto || this.isAttached) return this.calcTop()\n\n      return `${this.calcYOverflow(this.calcTopAuto())}px`\n    },\n    styles () {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex\n      }\n    },\n    tileHeight () {\n      return this.dense ? 36 : 48\n    }\n  },\n\n  watch: {\n    activator (newActivator, oldActivator) {\n      this.removeActivatorEvents(oldActivator)\n      this.addActivatorEvents(newActivator)\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    }\n  },\n\n  methods: {\n    activate () {\n      // This exists primarily for v-select\n      // helps determine which tiles to activate\n      this.getTiles()\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(this.startTransition)\n      // Once transitioning, calculate scroll position\n      setTimeout(this.calculateScroll, 50)\n    },\n    closeConditional () {\n      return this.isActive && this.closeOnClick\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = setTimeout(this.updateDimensions, 100)\n    }\n  },\n\n  render (h) {\n    const data = {\n      staticClass: 'v-menu',\n      class: { 'v-menu--inline': !this.fullWidth && this.$slots.activator },\n      directives: [{\n        arg: 500,\n        name: 'resize',\n        value: this.onResize\n      }],\n      on: {\n        keydown: this.onKeyDown\n      }\n    }\n\n    return h('div', data, [\n      this.genActivator(),\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark\n        }\n      }, [this.genTransition()])\n    ])\n  }\n})\n"],"sourceRoot":""}]}