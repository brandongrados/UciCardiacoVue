{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabsItems.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabsItems.js","mtime":1590258019777},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["// Extensions\nimport VWindow from '../VWindow/VWindow';\n/* @vue/component */\n\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n  inject: {\n    registerItems: {\n      default: null\n    },\n    tabProxy: {\n      default: null\n    },\n    unregisterItems: {\n      default: null\n    }\n  },\n  props: {\n    cycle: Boolean\n  },\n  watch: {\n    internalValue: function internalValue(val) {\n      /* istanbul ignore else */\n      if (this.tabProxy) this.tabProxy(val);\n    }\n  },\n  created: function created() {\n    this.registerItems && this.registerItems(this.changeModel);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unregisterItems && this.unregisterItems();\n  },\n  methods: {\n    changeModel: function changeModel(val) {\n      this.internalValue = val;\n    },\n    // For backwards compatability with v1.2\n    getValue: function getValue(item, i) {\n      /* istanbul ignore if */\n      if (item.id) return item.id;\n      return VWindow.options.methods.getValue.call(this, item, i);\n    },\n    next: function next() {\n      if (!this.cycle && this.internalIndex === this.items.length - 1) {\n        return;\n      }\n\n      VWindow.options.methods.next.call(this);\n    },\n    prev: function prev() {\n      if (!this.cycle && this.internalIndex === 0) {\n        return;\n      }\n\n      VWindow.options.methods.prev.call(this);\n    }\n  }\n});",{"version":3,"sources":["../../../src/components/VTabs/VTabsItems.js"],"names":[],"mappings":";AACA,OAAA,OAAA,MAAA,oBAAA;AAEA;;AACA,eAAe,OAAA,CAAA,MAAA,CAAe;AAC5B,EAAA,IAAA,EAD4B,cAAA;AAG5B,EAAA,MAAA,EAAQ;AACN,IAAA,aAAA,EAAe;AACb,MAAA,OAAA,EAAS;AADI,KADT;AAIN,IAAA,QAAA,EAAU;AACR,MAAA,OAAA,EAAS;AADD,KAJJ;AAON,IAAA,eAAA,EAAiB;AACf,MAAA,OAAA,EAAS;AADM;AAPX,GAHoB;AAe5B,EAAA,KAAA,EAAO;AACL,IAAA,KAAA,EAAO;AADF,GAfqB;AAmB5B,EAAA,KAAA,EAAO;AACL,IAAA,aADK,EAAA,SAAA,aAAA,CAAA,GAAA,EACa;AAChB;AACA,UAAI,KAAJ,QAAA,EAAmB,KAAA,QAAA,CAAA,GAAA;AACpB;AAJI,GAnBqB;AA0B5B,EAAA,OA1B4B,EAAA,SAAA,OAAA,GA0BrB;AACL,SAAA,aAAA,IAAsB,KAAA,aAAA,CAAmB,KAAzC,WAAsB,CAAtB;AA3B0B,GAAA;AA8B5B,EAAA,aA9B4B,EAAA,SAAA,aAAA,GA8Bf;AACX,SAAA,eAAA,IAAwB,KAAxB,eAAwB,EAAxB;AA/B0B,GAAA;AAkC5B,EAAA,OAAA,EAAS;AACP,IAAA,WADO,EAAA,SAAA,WAAA,CAAA,GAAA,EACS;AACd,WAAA,aAAA,GAAA,GAAA;AAFK,KAAA;AAIP;AACA,IAAA,QALO,EAAA,SAAA,QAAA,CAAA,IAAA,EAAA,CAAA,EAKU;AACf;AACA,UAAI,IAAA,CAAJ,EAAA,EAAa,OAAO,IAAA,CAAP,EAAA;AAEb,aAAO,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,EAAP,CAAO,CAAP;AATK,KAAA;AAWP,IAAA,IAXO,EAAA,SAAA,IAAA,GAWH;AACF,UAAI,CAAC,KAAD,KAAA,IAAe,KAAA,aAAA,KAAuB,KAAA,KAAA,CAAA,MAAA,GAA1C,CAAA,EAAiE;AAC/D;AACD;;AAED,MAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AAhBK,KAAA;AAkBP,IAAA,IAlBO,EAAA,SAAA,IAAA,GAkBH;AACF,UAAI,CAAC,KAAD,KAAA,IAAe,KAAA,aAAA,KAAnB,CAAA,EAA6C;AAC3C;AACD;;AAED,MAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACD;AAxBM;AAlCmB,CAAf,CAAf","sourcesContent":["// Extensions\nimport VWindow from '../VWindow/VWindow'\n\n/* @vue/component */\nexport default VWindow.extend({\n  name: 'v-tabs-items',\n\n  inject: {\n    registerItems: {\n      default: null\n    },\n    tabProxy: {\n      default: null\n    },\n    unregisterItems: {\n      default: null\n    }\n  },\n\n  props: {\n    cycle: Boolean\n  },\n\n  watch: {\n    internalValue (val) {\n      /* istanbul ignore else */\n      if (this.tabProxy) this.tabProxy(val)\n    }\n  },\n\n  created () {\n    this.registerItems && this.registerItems(this.changeModel)\n  },\n\n  beforeDestroy () {\n    this.unregisterItems && this.unregisterItems()\n  },\n\n  methods: {\n    changeModel (val) {\n      this.internalValue = val\n    },\n    // For backwards compatability with v1.2\n    getValue (item, i) {\n      /* istanbul ignore if */\n      if (item.id) return item.id\n\n      return VWindow.options.methods.getValue.call(this, item, i)\n    },\n    next () {\n      if (!this.cycle && this.internalIndex === this.items.length - 1) {\n        return\n      }\n\n      VWindow.options.methods.next.call(this)\n    },\n    prev () {\n      if (!this.cycle && this.internalIndex === 0) {\n        return\n      }\n\n      VWindow.options.methods.prev.call(this)\n    }\n  }\n})\n"],"sourceRoot":""}]}