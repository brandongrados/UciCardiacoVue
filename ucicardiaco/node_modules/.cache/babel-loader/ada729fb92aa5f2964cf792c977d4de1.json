{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\delayable.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\delayable.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\n\nexport default Vue.extend({\n  name: 'delayable',\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      openTimeout: undefined,\n      closeTimeout: undefined\n    };\n  },\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay: function clearDelay() {\n      clearTimeout(this.openTimeout);\n      clearTimeout(this.closeTimeout);\n    },\n\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay: function runDelay(type, cb) {\n      this.clearDelay();\n      var delay = parseInt(this[type + 'Delay'], 10);\n      this[type + 'Timeout'] = setTimeout(cb, delay);\n    }\n  }\n});",{"version":3,"sources":["../../src/mixins/delayable.ts"],"names":[],"mappings":";AAAA,OAAA,GAAA,MAAA,KAAA;AAEA;;;;;;;;AAOA,eAAe,GAAA,CAAA,MAAA,CAAW;AACxB,EAAA,IAAA,EADwB,WAAA;AAGxB,EAAA,KAAA,EAAO;AACL,IAAA,SAAA,EAAW;AACT,MAAA,IAAA,EAAM,CAAA,MAAA,EADG,MACH,CADG;AAET,MAAA,OAAA,EAAS;AAFA,KADN;AAKL,IAAA,UAAA,EAAY;AACV,MAAA,IAAA,EAAM,CAAA,MAAA,EADI,MACJ,CADI;AAEV,MAAA,OAAA,EAAS;AAFC;AALP,GAHiB;AAcxB,EAAA,IAAA,EAAM,SAAA,IAAA,GAAA;AAAA,WAAO;AACX,MAAA,WAAA,EADW,SAAA;AAEX,MAAA,YAAA,EAAc;AAFH,KAAP;AAdkB,GAAA;AAmBxB,EAAA,OAAA,EAAS;AACP;;;AAGA,IAAA,UAJO,EAAA,SAAA,UAAA,GAIG;AACR,MAAA,YAAA,CAAa,KAAb,WAAA,CAAA;AACA,MAAA,YAAA,CAAa,KAAb,YAAA,CAAA;AANK,KAAA;;AAQP;;;AAGA,IAAA,QAXO,EAAA,SAAA,QAAA,CAAA,IAAA,EAAA,EAAA,EAWyC;AAC9C,WAAA,UAAA;AAEA,UAAM,KAAA,GAAQ,QAAA,CAAU,KAAgB,IAAhB,GAAV,OAAU,CAAV,EAAd,EAAc,CAAd;AAEE,WAAgB,IAAhB,GAAA,SAAA,IAAiC,UAAA,CAAA,EAAA,EAAjC,KAAiC,CAAjC;AACH;AAjBM;AAnBe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb, delay)\n    }\n  }\n})\n"],"sourceRoot":""}]}