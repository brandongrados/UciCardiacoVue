{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTextField\\VTextField.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTextField\\VTextField.js","mtime":1589651992935},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Styles\n\n\nimport '../../../src/stylus/components/_text-fields.styl'; // Extensions\n\nimport VInput from '../VInput'; // Components\n\nimport VCounter from '../VCounter';\nimport VLabel from '../VLabel'; // Mixins\n\nimport Maskable from '../../mixins/maskable';\nimport Loadable from '../../mixins/loadable'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { keyCodes } from '../../util/helpers';\nimport { deprecate } from '../../util/console';\nvar dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\n/* @vue/component */\n\nexport default {\n  name: 'v-text-field',\n  directives: {\n    Ripple: Ripple\n  },\n  extends: VInput,\n  mixins: [Maskable, Loadable],\n  inheritAttrs: false,\n  props: {\n    appendOuterIcon: String,\n\n    /** @deprecated */\n    appendOuterIconCb: Function,\n    autofocus: Boolean,\n    box: Boolean,\n    browserAutocomplete: String,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$vuetify.icons.clear'\n    },\n    clearIconCb: Function,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    counter: [Boolean, Number, String],\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outline: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n\n    /** @deprecated */\n    prependInnerIconCb: Function,\n    reverse: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: function data() {\n    return {\n      badInput: false,\n      initialValue: null,\n      internalChange: false,\n      isClearing: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--box': this.box,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outline': this.hasOutline,\n        'v-text-field--placeholder': this.placeholder\n      };\n    },\n    counterValue: function counterValue() {\n      return (this.internalValue || '').toString().length;\n    },\n    directivesInput: function directivesInput() {\n      return [];\n    },\n    // TODO: Deprecate\n    hasOutline: function hasOutline() {\n      return this.outline || this.textarea;\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        if (this.mask) {\n          this.lazyValue = this.unmaskText(this.maskText(this.unmaskText(val)));\n          this.setSelectionRange();\n        } else {\n          this.lazyValue = val;\n          this.$emit('input', this.lazyValue);\n        }\n      }\n    },\n    isDirty: function isDirty() {\n      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput;\n    },\n    isEnclosed: function isEnclosed() {\n      return this.box || this.isSolo || this.hasOutline || this.fullWidth;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty || dirtyTypes.includes(this.type);\n    },\n    isSingle: function isSingle() {\n      return this.isSolo || this.singleLine;\n    },\n    isSolo: function isSolo() {\n      return this.solo || this.soloInverted;\n    },\n    labelPosition: function labelPosition() {\n      var offset = this.prefix && !this.labelValue ? this.prefixWidth : 0;\n      return !this.$vuetify.rtl !== !this.reverse ? {\n        left: 'auto',\n        right: offset\n      } : {\n        left: offset,\n        right: 'auto'\n      };\n    },\n    showLabel: function showLabel() {\n      return this.hasLabel && (!this.isSingle || !this.isLabelActive && !this.placeholder && !this.prefixLabel);\n    },\n    labelValue: function labelValue() {\n      return !this.isSingle && Boolean(this.isFocused || this.isLabelActive || this.placeholder || this.prefixLabel);\n    },\n    prefixWidth: function prefixWidth() {\n      if (!this.prefix && !this.$refs.prefix) return;\n      return this.$refs.prefix.offsetWidth;\n    },\n    prefixLabel: function prefixLabel() {\n      return this.prefix && !this.value;\n    }\n  },\n  watch: {\n    isFocused: function isFocused(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    value: function value(val) {\n      var _this = this;\n\n      if (this.mask && !this.internalChange) {\n        var masked = this.maskText(this.unmaskText(val));\n        this.lazyValue = this.unmaskText(masked); // Emit when the externally set value was modified internally\n\n        String(val) !== this.lazyValue && this.$nextTick(function () {\n          _this.$refs.input.value = masked;\n\n          _this.$emit('input', _this.lazyValue);\n        });\n      } else this.lazyValue = val;\n    }\n  },\n  mounted: function mounted() {\n    this.autofocus && this.onFocus();\n  },\n  methods: {\n    /** @public */\n    focus: function focus() {\n      this.onFocus();\n    },\n\n    /** @public */\n    blur: function blur() {\n      this.$refs.input ? this.$refs.input.blur() : this.onBlur();\n    },\n    clearableCallback: function clearableCallback() {\n      var _this2 = this;\n\n      this.internalValue = null;\n      this.$nextTick(function () {\n        return _this2.$refs.input.focus();\n      });\n    },\n    genAppendSlot: function genAppendSlot() {\n      var slot = [];\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer']);\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n    genPrependInnerSlot: function genPrependInnerSlot() {\n      var slot = [];\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner']);\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'));\n      }\n\n      return this.genSlot('prepend', 'inner', slot);\n    },\n    genIconSlot: function genIconSlot() {\n      var slot = [];\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append']);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'inner', slot);\n    },\n    genInputSlot: function genInputSlot() {\n      var input = VInput.methods.genInputSlot.call(this);\n      var prepend = this.genPrependInnerSlot();\n      prepend && input.children.unshift(prepend);\n      return input;\n    },\n    genClearIcon: function genClearIcon() {\n      if (!this.clearable) return null;\n      var icon = !this.isDirty ? false : 'clear';\n      if (this.clearIconCb) deprecate(':clear-icon-cb', '@click:clear', this);\n      return this.genSlot('append', 'inner', [this.genIcon(icon, !this.$listeners['click:clear'] && this.clearIconCb || this.clearableCallback, false)]);\n    },\n    genCounter: function genCounter() {\n      if (this.counter === false || this.counter == null) return null;\n      var max = this.counter === true ? this.$attrs.maxlength : this.counter;\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max: max,\n          value: this.counterValue\n        }\n      });\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genTextFieldSlot(), this.genClearIcon(), this.genIconSlot(), this.genProgress()];\n    },\n    genLabel: function genLabel() {\n      if (!this.showLabel) return null;\n      var data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      };\n      if (this.$attrs.id) data.props.for = this.$attrs.id;\n      return this.$createElement(VLabel, data, this.$slots.label || this.label);\n    },\n    genInput: function genInput() {\n      var listeners = Object.assign({}, this.$listeners);\n      delete listeners['change']; // Change should not be bound externally\n\n      var data = {\n        style: {},\n        domProps: {\n          value: this.maskText(this.lazyValue)\n        },\n        attrs: _extends({\n          'aria-label': (!this.$attrs || !this.$attrs.id) && this.label\n        }, this.$attrs, {\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          readonly: this.readonly,\n          type: this.type\n        }),\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown\n        }),\n        ref: 'input'\n      };\n      if (this.placeholder) data.attrs.placeholder = this.placeholder;\n      if (this.mask) data.attrs.maxlength = this.masked.length;\n      if (this.browserAutocomplete) data.attrs.autocomplete = this.browserAutocomplete;\n      return this.$createElement('input', data);\n    },\n    genMessages: function genMessages() {\n      if (this.hideDetails) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [VInput.methods.genMessages.call(this), this.genCounter()]);\n    },\n    genTextFieldSlot: function genTextFieldSlot() {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, this.genInput(), this.suffix ? this.genAffix('suffix') : null]);\n    },\n    genAffix: function genAffix(type) {\n      return this.$createElement('div', {\n        'class': 'v-text-field__' + type,\n        ref: type\n      }, this[type]);\n    },\n    onBlur: function onBlur(e) {\n      this.isFocused = false; // Reset internalChange state\n      // to allow external change\n      // to persist\n\n      this.internalChange = false;\n      this.$emit('blur', e);\n    },\n    onClick: function onClick() {\n      if (this.isFocused || this.disabled) return;\n      this.$refs.input.focus();\n    },\n    onFocus: function onFocus(e) {\n      if (!this.$refs.input) return;\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        this.$emit('focus', e);\n      }\n    },\n    onInput: function onInput(e) {\n      this.internalChange = true;\n      this.mask && this.resetSelections(e.target);\n      this.internalValue = e.target.value;\n      this.badInput = e.target.validity && e.target.validity.badInput;\n    },\n    onKeyDown: function onKeyDown(e) {\n      this.internalChange = true;\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue);\n      this.$emit('keydown', e);\n    },\n    onMouseDown: function onMouseDown(e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.methods.onMouseDown.call(this, e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      if (this.hasMouseDown) this.focus();\n      VInput.methods.onMouseUp.call(this, e);\n    }\n  }\n};",{"version":3,"sources":["../../../src/components/VTextField/VTextField.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_text-fields.styl'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Maskable from '../../mixins/maskable'\nimport Loadable from '../../mixins/loadable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport {\n  keyCodes\n} from '../../util/helpers'\nimport { deprecate } from '../../util/console'\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default {\n  name: 'v-text-field',\n\n  directives: { Ripple },\n\n  extends: VInput,\n\n  mixins: [Maskable, Loadable],\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    /** @deprecated */\n    appendOuterIconCb: Function,\n    autofocus: Boolean,\n    box: Boolean,\n    browserAutocomplete: String,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$vuetify.icons.clear'\n    },\n    clearIconCb: Function,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    counter: [Boolean, Number, String],\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outline: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    /** @deprecated */\n    prependInnerIconCb: Function,\n    reverse: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n\n  data: () => ({\n    badInput: false,\n    initialValue: null,\n    internalChange: false,\n    isClearing: false\n  }),\n\n  computed: {\n    classes () {\n      return {\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--box': this.box,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outline': this.hasOutline,\n        'v-text-field--placeholder': this.placeholder\n      }\n    },\n    counterValue () {\n      return (this.internalValue || '').toString().length\n    },\n    directivesInput () {\n      return []\n    },\n    // TODO: Deprecate\n    hasOutline () {\n      return this.outline || this.textarea\n    },\n    internalValue: {\n      get () {\n        return this.lazyValue\n      },\n      set (val) {\n        if (this.mask) {\n          this.lazyValue = this.unmaskText(this.maskText(this.unmaskText(val)))\n          this.setSelectionRange()\n        } else {\n          this.lazyValue = val\n          this.$emit('input', this.lazyValue)\n        }\n      }\n    },\n    isDirty () {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed () {\n      return (\n        this.box ||\n        this.isSolo ||\n        this.hasOutline ||\n        this.fullWidth\n      )\n    },\n    isLabelActive () {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle () {\n      return this.isSolo || this.singleLine\n    },\n    isSolo () {\n      return this.solo || this.soloInverted\n    },\n    labelPosition () {\n      const offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      return (!this.$vuetify.rtl !== !this.reverse) ? {\n        left: 'auto',\n        right: offset\n      } : {\n        left: offset,\n        right: 'auto'\n      }\n    },\n    showLabel () {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder && !this.prefixLabel))\n    },\n    labelValue () {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder || this.prefixLabel)\n    },\n    prefixWidth () {\n      if (!this.prefix && !this.$refs.prefix) return\n\n      return this.$refs.prefix.offsetWidth\n    },\n    prefixLabel () {\n      return (this.prefix && !this.value)\n    }\n  },\n\n  watch: {\n    isFocused (val) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    value (val) {\n      if (this.mask && !this.internalChange) {\n        const masked = this.maskText(this.unmaskText(val))\n        this.lazyValue = this.unmaskText(masked)\n\n        // Emit when the externally set value was modified internally\n        String(val) !== this.lazyValue && this.$nextTick(() => {\n          this.$refs.input.value = masked\n          this.$emit('input', this.lazyValue)\n        })\n      } else this.lazyValue = val\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.onFocus()\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur () {\n      this.$refs.input ? this.$refs.input.blur() : this.onBlur()\n    },\n    clearableCallback () {\n      this.internalValue = null\n      this.$nextTick(() => this.$refs.input.focus())\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n      prepend && input.children.unshift(prepend)\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const icon = !this.isDirty\n        ? false\n        : 'clear'\n\n      if (this.clearIconCb) deprecate(':clear-icon-cb', '@click:clear', this)\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon(\n          icon,\n          (!this.$listeners['click:clear'] && this.clearIconCb) || this.clearableCallback,\n          false\n        )\n      ])\n    },\n    genCounter () {\n      if (this.counter === false || this.counter == null) return null\n\n      const max = this.counter === true ? this.$attrs.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.counterValue\n        }\n      })\n    },\n    genDefaultSlot () {\n      return [\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress()\n      ]\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      }\n\n      if (this.$attrs.id) data.props.for = this.$attrs.id\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.$listeners)\n      delete listeners['change'] // Change should not be bound externally\n\n      const data = {\n        style: {},\n        domProps: {\n          value: this.maskText(this.lazyValue)\n        },\n        attrs: {\n          'aria-label': (!this.$attrs || !this.$attrs.id) && this.label, // Label `for` will be set if we have an id\n          ...this.$attrs,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          readonly: this.readonly,\n          type: this.type\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown\n        }),\n        ref: 'input'\n      }\n\n      if (this.placeholder) data.attrs.placeholder = this.placeholder\n      if (this.mask) data.attrs.maxlength = this.masked.length\n      if (this.browserAutocomplete) data.attrs.autocomplete = this.browserAutocomplete\n\n      return this.$createElement('input', data)\n    },\n    genMessages () {\n      if (this.hideDetails) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [\n        VInput.methods.genMessages.call(this),\n        this.genCounter()\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null\n      ])\n    },\n    genAffix (type) {\n      return this.$createElement('div', {\n        'class': `v-text-field__${type}`,\n        ref: type\n      }, this[type])\n    },\n    onBlur (e) {\n      this.isFocused = false\n      // Reset internalChange state\n      // to allow external change\n      // to persist\n      this.internalChange = false\n\n      this.$emit('blur', e)\n    },\n    onClick () {\n      if (this.isFocused || this.disabled) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus', e)\n      }\n    },\n    onInput (e) {\n      this.internalChange = true\n      this.mask && this.resetSelections(e.target)\n      this.internalValue = e.target.value\n      this.badInput = e.target.validity && e.target.validity.badInput\n    },\n    onKeyDown (e) {\n      this.internalChange = true\n\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.methods.onMouseUp.call(this, e)\n    }\n  }\n}\n"],"sourceRoot":""}]}