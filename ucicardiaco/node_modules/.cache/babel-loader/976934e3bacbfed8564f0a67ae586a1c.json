{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTimePicker\\VTimePicker.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTimePicker\\VTimePicker.js","mtime":1589651992998},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}(); // Components\n\n\nimport VTimePickerTitle from './VTimePickerTitle';\nimport VTimePickerClock from './VTimePickerClock'; // Mixins\n\nimport Picker from '../../mixins/picker'; // Utils\n\nimport { createRange } from '../../util/helpers';\nimport pad from '../VDatePicker/util/pad';\nvar rangeHours24 = createRange(24);\nvar rangeHours12am = createRange(12);\nvar rangeHours12pm = rangeHours12am.map(function (v) {\n  return v + 12;\n});\nvar rangeMinutes = createRange(60);\n/* @vue/component */\n\nexport default {\n  name: 'v-time-picker',\n  mixins: [Picker],\n  props: {\n    allowedHours: Function,\n    allowedMinutes: Function,\n    format: {\n      type: String,\n      default: 'ampm',\n      validator: function validator(val) {\n        return ['ampm', '24hr'].includes(val);\n      }\n    },\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    value: null\n  },\n  data: function data() {\n    return {\n      inputHour: null,\n      inputMinute: null,\n      period: 'am',\n      selectingHour: true\n    };\n  },\n  computed: {\n    isAllowedHourCb: function isAllowedHourCb() {\n      var _this = this;\n\n      if (!this.min && !this.max) return this.allowedHours;\n      var minHour = this.min ? this.min.split(':')[0] : 0;\n      var maxHour = this.max ? this.max.split(':')[0] : 23;\n      return function (val) {\n        return val >= minHour * 1 && val <= maxHour * 1 && (!_this.allowedHours || _this.allowedHours(val));\n      };\n    },\n    isAllowedMinuteCb: function isAllowedMinuteCb() {\n      var _this2 = this;\n\n      var isHourAllowed = !this.allowedHours || this.allowedHours(this.inputHour);\n\n      if (!this.min && !this.max) {\n        return isHourAllowed ? this.allowedMinutes : function () {\n          return false;\n        };\n      }\n\n      var _ref = this.min ? this.min.split(':') : [0, 0],\n          _ref2 = _slicedToArray(_ref, 2),\n          minHour = _ref2[0],\n          minMinute = _ref2[1];\n\n      var _ref3 = this.max ? this.max.split(':') : [23, 59],\n          _ref4 = _slicedToArray(_ref3, 2),\n          maxHour = _ref4[0],\n          maxMinute = _ref4[1];\n\n      var minTime = minHour * 60 + minMinute * 1;\n      var maxTime = maxHour * 60 + maxMinute * 1;\n      return function (val) {\n        var time = 60 * _this2.inputHour + val;\n        return time >= minTime && time <= maxTime && isHourAllowed && (!_this2.allowedMinutes || _this2.allowedMinutes(val));\n      };\n    },\n    isAmPm: function isAmPm() {\n      return this.format === 'ampm';\n    }\n  },\n  watch: {\n    value: 'setInputData'\n  },\n  mounted: function mounted() {\n    this.setInputData(this.value);\n  },\n  methods: {\n    emitValue: function emitValue() {\n      if (this.inputHour != null && this.inputMinute != null) {\n        this.$emit('input', pad(this.inputHour) + ':' + pad(this.inputMinute));\n      }\n    },\n    setPeriod: function setPeriod(period) {\n      this.period = period;\n\n      if (this.inputHour != null) {\n        var newHour = this.inputHour + (period === 'am' ? -12 : 12);\n        this.inputHour = this.firstAllowed('hour', newHour);\n        this.emitValue();\n      }\n    },\n    setInputData: function setInputData(value) {\n      if (value == null || value === '') {\n        this.inputHour = null;\n        this.inputMinute = null;\n        return;\n      }\n\n      if (value instanceof Date) {\n        this.inputHour = value.getHours();\n        this.inputMinute = value.getMinutes();\n      } else {\n        var _ref5 = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:\\d+)?([ap]m)?$/, '') || [],\n            _ref6 = _slicedToArray(_ref5, 5),\n            hour = _ref6[1],\n            minute = _ref6[2],\n            period = _ref6[4];\n\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period) : parseInt(hour, 10);\n        this.inputMinute = parseInt(minute, 10);\n      }\n\n      this.period = this.inputHour < 12 ? 'am' : 'pm';\n    },\n    convert24to12: function convert24to12(hour) {\n      return hour ? (hour - 1) % 12 + 1 : 12;\n    },\n    convert12to24: function convert12to24(hour, period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0);\n    },\n    onInput: function onInput(value) {\n      if (this.selectingHour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value;\n      } else {\n        this.inputMinute = value;\n      }\n\n      this.emitValue();\n    },\n    onChange: function onChange() {\n      if (!this.selectingHour) {\n        this.$emit('change', this.value);\n      } else {\n        this.selectingHour = false;\n      }\n    },\n    firstAllowed: function firstAllowed(type, value) {\n      var allowedFn = type === 'hour' ? this.isAllowedHourCb : this.isAllowedMinuteCb;\n      if (!allowedFn) return value; // TODO: clean up\n\n      var range = type === 'minute' ? rangeMinutes : this.isAmPm ? value < 12 ? rangeHours12am : rangeHours12pm : rangeHours24;\n      var first = range.find(function (v) {\n        return allowedFn((v + value) % range.length + range[0]);\n      });\n      return ((first || 0) + value) % range.length + range[0];\n    },\n    genClock: function genClock() {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues: this.selectingHour ? this.isAllowedHourCb : this.isAllowedMinuteCb,\n          color: this.color,\n          dark: this.dark,\n          double: this.selectingHour && !this.isAmPm,\n          format: this.selectingHour ? this.isAmPm ? this.convert24to12 : function (val) {\n            return val;\n          } : function (val) {\n            return pad(val, 2);\n          },\n          light: this.light,\n          max: this.selectingHour ? this.isAmPm && this.period === 'am' ? 11 : 23 : 59,\n          min: this.selectingHour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: this.width - (!this.fullWidth && this.landscape ? 80 : 20),\n          step: this.selectingHour ? 1 : 5,\n          value: this.selectingHour ? this.inputHour : this.inputMinute\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange\n        },\n        ref: 'clock'\n      });\n    },\n    genPickerBody: function genPickerBody() {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selectingHour\n      }, [this.genClock()]);\n    },\n    genPickerTitle: function genPickerTitle() {\n      var _this3 = this;\n\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.isAmPm,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          period: this.period,\n          readonly: this.readonly,\n          selectingHour: this.selectingHour\n        },\n        on: {\n          'update:selectingHour': function updateSelectingHour(value) {\n            return _this3.selectingHour = value;\n          },\n          'update:period': this.setPeriod\n        },\n        ref: 'title',\n        slot: 'title'\n      });\n    }\n  },\n  render: function render() {\n    return this.genPicker('v-picker--time');\n  }\n};",{"version":3,"sources":["../../../src/components/VTimePicker/VTimePicker.js"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport VTimePickerTitle from './VTimePickerTitle'\nimport VTimePickerClock from './VTimePickerClock'\n\n// Mixins\nimport Picker from '../../mixins/picker'\n\n// Utils\nimport { createRange } from '../../util/helpers'\nimport pad from '../VDatePicker/util/pad'\n\nconst rangeHours24 = createRange(24)\nconst rangeHours12am = createRange(12)\nconst rangeHours12pm = rangeHours12am.map(v => v + 12)\nconst rangeMinutes = createRange(60)\n\n/* @vue/component */\nexport default {\n  name: 'v-time-picker',\n\n  mixins: [Picker],\n\n  props: {\n    allowedHours: Function,\n    allowedMinutes: Function,\n    format: {\n      type: String,\n      default: 'ampm',\n      validator (val) {\n        return ['ampm', '24hr'].includes(val)\n      }\n    },\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    value: null\n  },\n\n  data () {\n    return {\n      inputHour: null,\n      inputMinute: null,\n      period: 'am',\n      selectingHour: true\n    }\n  },\n\n  computed: {\n    isAllowedHourCb () {\n      if (!this.min && !this.max) return this.allowedHours\n\n      const minHour = this.min ? this.min.split(':')[0] : 0\n      const maxHour = this.max ? this.max.split(':')[0] : 23\n\n      return val => {\n        return val >= minHour * 1 &&\n          val <= maxHour * 1 &&\n          (!this.allowedHours || this.allowedHours(val))\n      }\n    },\n    isAllowedMinuteCb () {\n      const isHourAllowed = !this.allowedHours || this.allowedHours(this.inputHour)\n      if (!this.min && !this.max) {\n        return isHourAllowed ? this.allowedMinutes : () => false\n      }\n\n      const [minHour, minMinute] = this.min ? this.min.split(':') : [0, 0]\n      const [maxHour, maxMinute] = this.max ? this.max.split(':') : [23, 59]\n      const minTime = minHour * 60 + minMinute * 1\n      const maxTime = maxHour * 60 + maxMinute * 1\n\n      return val => {\n        const time = 60 * this.inputHour + val\n        return time >= minTime &&\n          time <= maxTime &&\n          isHourAllowed &&\n          (!this.allowedMinutes || this.allowedMinutes(val))\n      }\n    },\n    isAmPm () {\n      return this.format === 'ampm'\n    }\n  },\n\n  watch: {\n    value: 'setInputData'\n  },\n\n  mounted () {\n    this.setInputData(this.value)\n  },\n\n  methods: {\n    emitValue () {\n      if (this.inputHour != null && this.inputMinute != null) {\n        this.$emit('input', `${pad(this.inputHour)}:${pad(this.inputMinute)}`)\n      }\n    },\n    setPeriod (period) {\n      this.period = period\n      if (this.inputHour != null) {\n        const newHour = this.inputHour + (period === 'am' ? -12 : 12)\n        this.inputHour = this.firstAllowed('hour', newHour)\n        this.emitValue()\n      }\n    },\n    setInputData (value) {\n      if (value == null || value === '') {\n        this.inputHour = null\n        this.inputMinute = null\n        return\n      }\n\n      if (value instanceof Date) {\n        this.inputHour = value.getHours()\n        this.inputMinute = value.getMinutes()\n      } else {\n        const [, hour, minute, , period] = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:\\d+)?([ap]m)?$/, '') || []\n\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period) : parseInt(hour, 10)\n        this.inputMinute = parseInt(minute, 10)\n      }\n\n      this.period = this.inputHour < 12 ? 'am' : 'pm'\n    },\n    convert24to12 (hour) {\n      return hour ? ((hour - 1) % 12 + 1) : 12\n    },\n    convert12to24 (hour, period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0)\n    },\n    onInput (value) {\n      if (this.selectingHour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value\n      } else {\n        this.inputMinute = value\n      }\n      this.emitValue()\n    },\n    onChange () {\n      if (!this.selectingHour) {\n        this.$emit('change', this.value)\n      } else {\n        this.selectingHour = false\n      }\n    },\n    firstAllowed (type, value) {\n      const allowedFn = type === 'hour' ? this.isAllowedHourCb : this.isAllowedMinuteCb\n      if (!allowedFn) return value\n\n      // TODO: clean up\n      const range = type === 'minute'\n        ? rangeMinutes\n        : (this.isAmPm\n          ? (value < 12\n            ? rangeHours12am\n            : rangeHours12pm)\n          : rangeHours24)\n      const first = range.find(v => allowedFn((v + value) % range.length + range[0]))\n      return ((first || 0) + value) % range.length + range[0]\n    },\n    genClock () {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues: this.selectingHour ? this.isAllowedHourCb : this.isAllowedMinuteCb,\n          color: this.color,\n          dark: this.dark,\n          double: this.selectingHour && !this.isAmPm,\n          format: this.selectingHour ? (this.isAmPm ? this.convert24to12 : val => val) : val => pad(val, 2),\n          light: this.light,\n          max: this.selectingHour ? (this.isAmPm && this.period === 'am' ? 11 : 23) : 59,\n          min: this.selectingHour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: this.width - ((!this.fullWidth && this.landscape) ? 80 : 20),\n          step: this.selectingHour ? 1 : 5,\n          value: this.selectingHour ? this.inputHour : this.inputMinute\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange\n        },\n        ref: 'clock'\n      })\n    },\n    genPickerBody () {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selectingHour\n      }, [this.genClock()])\n    },\n    genPickerTitle () {\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.isAmPm,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          period: this.period,\n          readonly: this.readonly,\n          selectingHour: this.selectingHour\n        },\n        on: {\n          'update:selectingHour': value => (this.selectingHour = value),\n          'update:period': this.setPeriod\n        },\n        ref: 'title',\n        slot: 'title'\n      })\n    }\n  },\n\n  render () {\n    return this.genPicker('v-picker--time')\n  }\n}\n"],"sourceRoot":""}]}