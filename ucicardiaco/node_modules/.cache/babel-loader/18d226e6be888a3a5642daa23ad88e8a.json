{"remainingRequest":"C:\\Users\\miguel\\Desktop\\Sistema Uci Miguel Laurente\\Front\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\miguel\\Desktop\\Sistema Uci Miguel Laurente\\Front\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VRangeSlider\\VRangeSlider.js","dependencies":[{"path":"C:\\Users\\miguel\\Desktop\\Sistema Uci Miguel Laurente\\Front\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VRangeSlider\\VRangeSlider.js","mtime":1590205708804},{"path":"C:\\Users\\miguel\\Desktop\\Sistema Uci Miguel Laurente\\Front\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590205630444},{"path":"C:\\Users\\miguel\\Desktop\\Sistema Uci Miguel Laurente\\Front\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590205629546}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.assign\";\n// Styles\nimport '../../../src/stylus/components/_range-sliders.styl'; // Extensions\n\nimport VSlider from '../VSlider';\nimport { createRange, deepEqual } from '../../util/helpers';\n/* @vue/component */\n\nexport default {\n  name: 'v-range-slider',\n  extends: VSlider,\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data(vm) {\n    return {\n      activeThumb: null,\n      lazyValue: !vm.value.length ? [0, 0] : vm.value\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return Object.assign({}, {\n        'v-input--range-slider': true\n      }, VSlider.computed.classes.call(this));\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        var _this = this;\n\n        var min = this.min,\n            max = this.max; // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n\n        var value = val.map(function (v) {\n          return _this.roundValue(Math.min(Math.max(v, min), max));\n        }); // Switch values if range and wrong order\n\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) this.activeThumb = this.activeThumb === 1 ? 0 : 1;\n          value = [value[1], value[0]];\n        }\n\n        this.lazyValue = value;\n        if (!deepEqual(value, this.value)) this.$emit('input', value);\n        this.validate();\n      }\n    },\n    inputWidth: function inputWidth() {\n      var _this2 = this;\n\n      return this.internalValue.map(function (v) {\n        return (_this2.roundValue(v) - _this2.min) / (_this2.max - _this2.min) * 100;\n      });\n    },\n    isDirty: function isDirty() {\n      var _this3 = this;\n\n      return this.internalValue.some(function (v) {\n        return v !== _this3.min;\n      }) || this.alwaysDirty;\n    },\n    trackFillStyles: function trackFillStyles() {\n      var styles = VSlider.computed.trackFillStyles.call(this);\n      var fillPercent = Math.abs(this.inputWidth[0] - this.inputWidth[1]);\n      styles.width = 'calc(' + fillPercent + '% - ' + this.trackPadding + 'px)';\n      styles[this.$vuetify.rtl ? 'right' : 'left'] = this.inputWidth[0] + '%';\n      return styles;\n    },\n    trackPadding: function trackPadding() {\n      if (this.isDirty || this.internalValue[0]) return 0;\n      return VSlider.computed.trackPadding.call(this);\n    }\n  },\n  methods: {\n    getIndexOfClosestValue: function getIndexOfClosestValue(arr, v) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0;else return 1;\n    },\n    genInput: function genInput() {\n      var _this4 = this;\n\n      return createRange(2).map(function (i) {\n        var input = VSlider.methods.genInput.call(_this4);\n        input.data.attrs.value = _this4.internalValue[i];\n\n        input.data.on.focus = function (e) {\n          _this4.activeThumb = i;\n          VSlider.methods.onFocus.call(_this4, e);\n        };\n\n        return input;\n      });\n    },\n    genChildren: function genChildren() {\n      var _this5 = this;\n\n      return [this.genInput(), this.genTrackContainer(), this.genSteps(), createRange(2).map(function (i) {\n        var value = _this5.internalValue[i];\n\n        var onDrag = function onDrag(e) {\n          _this5.isActive = true;\n          _this5.activeThumb = i;\n\n          _this5.onThumbMouseDown(e);\n        };\n\n        var valueWidth = _this5.inputWidth[i];\n        var isActive = (_this5.isFocused || _this5.isActive) && _this5.activeThumb === i;\n        return _this5.genThumbContainer(value, valueWidth, isActive, onDrag);\n      })];\n    },\n    onSliderClick: function onSliderClick(e) {\n      if (!this.isActive) {\n        this.isFocused = true;\n        this.onMouseMove(e, true);\n        this.$emit('change', this.internalValue);\n      }\n    },\n    onMouseMove: function onMouseMove(e) {\n      var trackClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _parseMouseMove = this.parseMouseMove(e),\n          value = _parseMouseMove.value,\n          isInsideTrack = _parseMouseMove.isInsideTrack;\n\n      if (isInsideTrack) {\n        if (trackClick) this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value);\n        this.setInternalValue(value);\n      }\n    },\n    onKeyDown: function onKeyDown(e) {\n      var value = this.parseKeyDown(e, this.internalValue[this.activeThumb]);\n      if (value == null) return;\n      this.setInternalValue(value);\n    },\n    setInternalValue: function setInternalValue(value) {\n      var _this6 = this;\n\n      this.internalValue = this.internalValue.map(function (v, i) {\n        if (i === _this6.activeThumb) return value;else return Number(v);\n      });\n    }\n  }\n};",{"version":3,"sources":["../../../src/components/VRangeSlider/VRangeSlider.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_range-sliders.styl'\n\n// Extensions\nimport VSlider from '../VSlider'\n\nimport {\n  createRange,\n  deepEqual\n} from '../../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'v-range-slider',\n\n  extends: VSlider,\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n\n  data: vm => ({\n    activeThumb: null,\n    lazyValue: !vm.value.length\n      ? [0, 0]\n      : vm.value\n  }),\n\n  computed: {\n    classes () {\n      return Object.assign({}, {\n        'v-input--range-slider': true\n      }, VSlider.computed.classes.call(this))\n    },\n    internalValue: {\n      get () {\n        return this.lazyValue\n      },\n      set (val) {\n        const { min, max } = this\n        // Round value to ensure the\n        // entire slider range can\n        // be selected with step\n        let value = val.map(v => this.roundValue(Math.min(Math.max(v, min), max)))\n\n        // Switch values if range and wrong order\n        if (value[0] > value[1] || value[1] < value[0]) {\n          if (this.activeThumb !== null) this.activeThumb = this.activeThumb === 1 ? 0 : 1\n          value = [value[1], value[0]]\n        }\n\n        this.lazyValue = value\n        if (!deepEqual(value, this.value)) this.$emit('input', value)\n\n        this.validate()\n      }\n    },\n    inputWidth () {\n      return this.internalValue.map(v => (\n        this.roundValue(v) - this.min) / (this.max - this.min) * 100\n      )\n    },\n    isDirty () {\n      return this.internalValue.some(v => v !== this.min) || this.alwaysDirty\n    },\n    trackFillStyles () {\n      const styles = VSlider.computed.trackFillStyles.call(this)\n      const fillPercent = Math.abs(this.inputWidth[0] - this.inputWidth[1])\n\n      styles.width = `calc(${fillPercent}% - ${this.trackPadding}px)`\n      styles[this.$vuetify.rtl ? 'right' : 'left'] = `${this.inputWidth[0]}%`\n\n      return styles\n    },\n    trackPadding () {\n      if (this.isDirty ||\n        this.internalValue[0]\n      ) return 0\n\n      return VSlider.computed.trackPadding.call(this)\n    }\n  },\n\n  methods: {\n    getIndexOfClosestValue (arr, v) {\n      if (Math.abs(arr[0] - v) < Math.abs(arr[1] - v)) return 0\n      else return 1\n    },\n    genInput () {\n      return createRange(2).map(i => {\n        const input = VSlider.methods.genInput.call(this)\n\n        input.data.attrs.value = this.internalValue[i]\n\n        input.data.on.focus = e => {\n          this.activeThumb = i\n          VSlider.methods.onFocus.call(this, e)\n        }\n\n        return input\n      })\n    },\n    genChildren () {\n      return [\n        this.genInput(),\n        this.genTrackContainer(),\n        this.genSteps(),\n        createRange(2).map(i => {\n          const value = this.internalValue[i]\n          const onDrag = e => {\n            this.isActive = true\n            this.activeThumb = i\n            this.onThumbMouseDown(e)\n          }\n          const valueWidth = this.inputWidth[i]\n          const isActive = (this.isFocused || this.isActive) && this.activeThumb === i\n\n          return this.genThumbContainer(value, valueWidth, isActive, onDrag)\n        })\n      ]\n    },\n    onSliderClick (e) {\n      if (!this.isActive) {\n        this.isFocused = true\n        this.onMouseMove(e, true)\n        this.$emit('change', this.internalValue)\n      }\n    },\n    onMouseMove (e, trackClick = false) {\n      const { value, isInsideTrack } = this.parseMouseMove(e)\n\n      if (isInsideTrack) {\n        if (trackClick) this.activeThumb = this.getIndexOfClosestValue(this.internalValue, value)\n\n        this.setInternalValue(value)\n      }\n    },\n    onKeyDown (e) {\n      const value = this.parseKeyDown(e, this.internalValue[this.activeThumb])\n\n      if (value == null) return\n\n      this.setInternalValue(value)\n    },\n    setInternalValue (value) {\n      this.internalValue = this.internalValue.map((v, i) => {\n        if (i === this.activeThumb) return value\n        else return Number(v)\n      })\n    }\n  }\n}\n"],"sourceRoot":""}]}