{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VBottomNav\\VBottomNav.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VBottomNav\\VBottomNav.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.number.constructor\";\n// Styles\nimport '../../../src/stylus/components/_bottom-navs.styl'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport ButtonGroup from '../../mixins/button-group';\nimport Colorable from '../../mixins/colorable'; // Util\n\nimport mixins from '../../util/mixins';\nexport default mixins(Applicationable('bottom', ['height', 'value']), Colorable\n/* @vue/component */\n).extend({\n  name: 'v-bottom-nav',\n  props: {\n    active: [Number, String],\n    mandatory: Boolean,\n    height: {\n      default: 56,\n      type: [Number, String],\n      validator: function validator(v) {\n        return !isNaN(parseInt(v));\n      }\n    },\n    shift: Boolean,\n    value: null\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-bottom-nav--absolute': this.absolute,\n        'v-bottom-nav--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-nav--shift': this.shift,\n        'v-bottom-nav--active': this.value\n      };\n    },\n    computedHeight: function computedHeight() {\n      return parseInt(this.height);\n    }\n  },\n  methods: {\n    updateApplication: function updateApplication() {\n      return !this.value ? 0 : this.computedHeight;\n    },\n    updateValue: function updateValue(val) {\n      this.$emit('update:active', val);\n    }\n  },\n  render: function render(h) {\n    return h(ButtonGroup, this.setBackgroundColor(this.color, {\n      staticClass: 'v-bottom-nav',\n      class: this.classes,\n      style: {\n        height: parseInt(this.computedHeight) + 'px'\n      },\n      props: {\n        mandatory: Boolean(this.mandatory || this.active !== undefined),\n        value: this.active\n      },\n      on: {\n        change: this.updateValue\n      }\n    }), this.$slots.default);\n  }\n});",{"version":3,"sources":["../../../src/components/VBottomNav/VBottomNav.ts"],"names":[],"mappings":";;;AACA,OAAA,kDAAA,C,CAEA;;AACA,OAAA,eAAA,MAAA,8BAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,wBAAA,C,CAEA;;AACA,OAAA,MAAA,MAAA,mBAAA;AAMA,eAAe,MAAA,CACb,eAAA,CAAA,QAAA,EAA0B,CAAA,QAAA,EADb,OACa,CAA1B,CADa,EAKb;AACA;AANa,CAAA,CAAA,MAAA,CAON;AACP,EAAA,IAAA,EADO,cAAA;AAGP,EAAA,KAAA,EAAO;AACL,IAAA,MAAA,EAAQ,CAAA,MAAA,EADH,MACG,CADH;AAEL,IAAA,SAAA,EAFK,OAAA;AAGL,IAAA,MAAA,EAAQ;AACN,MAAA,OAAA,EADM,EAAA;AAEN,MAAA,IAAA,EAAM,CAAA,MAAA,EAFA,MAEA,CAFA;AAGN,MAAA,SAAA,EAAW,SAAA,SAAA,CAAA,CAAA,EAAA;AAAA,eAAiC,CAAC,KAAA,CAAM,QAAA,CAAxC,CAAwC,CAAN,CAAlC;AAAA;AAHL,KAHH;AAQL,IAAA,KAAA,EARK,OAAA;AASL,IAAA,KAAA,EAAO;AATF,GAHA;AAeP,EAAA,QAAA,EAAU;AACR,IAAA,OADQ,EAAA,SAAA,OAAA,GACD;AACL,aAAO;AACL,kCAA0B,KADrB,QAAA;AAEL,+BAAuB,CAAC,KAAD,QAAA,KAAmB,KAAA,GAAA,IAAY,KAFjD,KAEkB,CAFlB;AAGL,+BAAuB,KAHlB,KAAA;AAIL,gCAAwB,KAAK;AAJxB,OAAP;AAFM,KAAA;AASR,IAAA,cATQ,EAAA,SAAA,cAAA,GASM;AACZ,aAAO,QAAA,CAAS,KAAhB,MAAO,CAAP;AACD;AAXO,GAfH;AA6BP,EAAA,OAAA,EAAS;AACP,IAAA,iBADO,EAAA,SAAA,iBAAA,GACU;AACf,aAAO,CAAC,KAAD,KAAA,GAAA,CAAA,GAEH,KAFJ,cAAA;AAFK,KAAA;AAMP,IAAA,WANO,EAAA,SAAA,WAAA,CAAA,GAAA,EAMc;AACnB,WAAA,KAAA,CAAA,eAAA,EAAA,GAAA;AACD;AARM,GA7BF;AAwCP,EAAA,MAxCO,EAAA,SAAA,MAAA,CAAA,CAAA,EAwCE;AACP,WAAO,CAAA,CAAA,WAAA,EAAe,KAAA,kBAAA,CAAwB,KAAxB,KAAA,EAAoC;AACxD,MAAA,WAAA,EADwD,cAAA;AAExD,MAAA,KAAA,EAAO,KAFiD,OAAA;AAGxD,MAAA,KAAA,EAAO;AACL,QAAA,MAAA,EAAW,QAAA,CAAS,KAApB,cAAW,CAAA,GAAX;AADK,OAHiD;AAMxD,MAAA,KAAA,EAAO;AACL,QAAA,SAAA,EAAW,OAAA,CAAQ,KAAA,SAAA,IAAkB,KAAA,MAAA,KADhC,SACM,CADN;AAEL,QAAA,KAAA,EAAO,KAAK;AAFP,OANiD;AAUxD,MAAA,EAAA,EAAI;AAAE,QAAA,MAAA,EAAQ,KAAV;AAAA;AAVoD,KAApC,CAAf,EAWH,KAAA,MAAA,CAXJ,OAAO,CAAP;AAYD;AArDM,CAPM,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_bottom-navs.styl'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\n\n// Util\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default mixins(\n  Applicationable('bottom', [\n    'height',\n    'value'\n  ]),\n  Colorable\n  /* @vue/component */\n).extend({\n  name: 'v-bottom-nav',\n\n  props: {\n    active: [Number, String],\n    mandatory: Boolean,\n    height: {\n      default: 56,\n      type: [Number, String],\n      validator: (v: string | number): boolean => !isNaN(parseInt(v))\n    },\n    shift: Boolean,\n    value: null as any as PropValidator<any>\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-bottom-nav--absolute': this.absolute,\n        'v-bottom-nav--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-nav--shift': this.shift,\n        'v-bottom-nav--active': this.value\n      }\n    },\n    computedHeight (): number {\n      return parseInt(this.height)\n    }\n  },\n\n  methods: {\n    updateApplication (): number {\n      return !this.value\n        ? 0\n        : this.computedHeight\n    },\n    updateValue (val: any) {\n      this.$emit('update:active', val)\n    }\n  },\n\n  render (h): VNode {\n    return h(ButtonGroup, this.setBackgroundColor(this.color, {\n      staticClass: 'v-bottom-nav',\n      class: this.classes,\n      style: {\n        height: `${parseInt(this.computedHeight)}px`\n      },\n      props: {\n        mandatory: Boolean(this.mandatory || this.active !== undefined),\n        value: this.active\n      },\n      on: { change: this.updateValue }\n    }), this.$slots.default)\n  }\n})\n"],"sourceRoot":""}]}