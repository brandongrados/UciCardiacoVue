{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTextarea\\VTextarea.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTextarea\\VTextarea.js","mtime":1590258019789},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Styles\n\n\nimport '../../../src/stylus/components/_textarea.styl'; // Extensions\n\nimport VTextField from '../VTextField/VTextField';\nimport { consoleInfo } from '../../util/console';\n/* @vue/component */\n\nexport default {\n  name: 'v-textarea',\n  extends: VTextField,\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    outline: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: function validator(v) {\n        return !isNaN(parseFloat(v));\n      }\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: function validator(v) {\n        return !isNaN(parseInt(v, 10));\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _extends({\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle\n      }, VTextField.computed.classes.call(this, null));\n    },\n    dynamicHeight: function dynamicHeight() {\n      return this.autoGrow ? this.inputHeight : 'auto';\n    },\n    isEnclosed: function isEnclosed() {\n      return this.textarea || VTextField.computed.isEnclosed.call(this);\n    },\n    noResizeHandle: function noResizeHandle() {\n      return this.noResize || this.autoGrow;\n    }\n  },\n  watch: {\n    lazyValue: function lazyValue() {\n      !this.internalChange && this.autoGrow && this.$nextTick(this.calculateInputHeight);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    setTimeout(function () {\n      _this.autoGrow && _this.calculateInputHeight();\n    }, 0); // TODO: remove (2.0)\n\n    if (this.autoGrow && this.noResize) {\n      consoleInfo('\"no-resize\" is now implied when using \"auto-grow\", and can be removed', this);\n    }\n  },\n  methods: {\n    calculateInputHeight: function calculateInputHeight() {\n      var input = this.$refs.input;\n\n      if (input) {\n        input.style.height = 0;\n        var height = input.scrollHeight;\n        var minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight); // This has to be done ASAP, waiting for Vue\n        // to update the DOM causes ugly layout jumping\n\n        input.style.height = Math.max(minHeight, height) + 'px';\n      }\n    },\n    genInput: function genInput() {\n      var input = VTextField.methods.genInput.call(this);\n      input.tag = 'textarea';\n      delete input.data.attrs.type;\n      input.data.attrs.rows = this.rows;\n      return input;\n    },\n    onInput: function onInput(e) {\n      VTextField.methods.onInput.call(this, e);\n      this.autoGrow && this.calculateInputHeight();\n    },\n    onKeyDown: function onKeyDown(e) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation();\n      }\n\n      this.internalChange = true;\n      this.$emit('keydown', e);\n    }\n  }\n};",{"version":3,"sources":["../../../src/components/VTextarea/VTextarea.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_textarea.styl'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\nimport { consoleInfo } from '../../util/console'\n\n/* @vue/component */\nexport default {\n  name: 'v-textarea',\n\n  extends: VTextField,\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    outline: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: v => !isNaN(parseFloat(v))\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: v => !isNaN(parseInt(v, 10))\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.computed.classes.call(this, null)\n      }\n    },\n    dynamicHeight () {\n      return this.autoGrow\n        ? this.inputHeight\n        : 'auto'\n    },\n    isEnclosed () {\n      return this.textarea ||\n        VTextField.computed.isEnclosed.call(this)\n    },\n    noResizeHandle () {\n      return this.noResize || this.autoGrow\n    }\n  },\n\n  watch: {\n    lazyValue () {\n      !this.internalChange && this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    }\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n\n    // TODO: remove (2.0)\n    if (this.autoGrow && this.noResize) {\n      consoleInfo('\"no-resize\" is now implied when using \"auto-grow\", and can be removed', this)\n    }\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (input) {\n        input.style.height = 0\n        const height = input.scrollHeight\n        const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n        // This has to be done ASAP, waiting for Vue\n        // to update the DOM causes ugly layout jumping\n        input.style.height = Math.max(minHeight, height) + 'px'\n      }\n    },\n    genInput () {\n      const input = VTextField.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data.attrs.type\n      input.data.attrs.rows = this.rows\n\n      return input\n    },\n    onInput (e) {\n      VTextField.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused &&\n        e.keyCode === 13\n      ) {\n        e.stopPropagation()\n      }\n\n      this.internalChange = true\n      this.$emit('keydown', e)\n    }\n  }\n}\n"],"sourceRoot":""}]}