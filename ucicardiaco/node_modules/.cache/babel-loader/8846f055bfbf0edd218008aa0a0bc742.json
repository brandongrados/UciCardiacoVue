{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabs.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VTabs\\VTabs.js","mtime":1589651992877},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n// Styles\nimport '../../../src/stylus/components/_tabs.styl'; // Extensions\n\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'; // Component level mixins\n\nimport TabsComputed from './mixins/tabs-computed';\nimport TabsGenerators from './mixins/tabs-generators';\nimport TabsProps from './mixins/tabs-props';\nimport TabsTouch from './mixins/tabs-touch';\nimport TabsWatchers from './mixins/tabs-watchers'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Themeable from '../../mixins/themeable'; // Directives\n\nimport Resize from '../../directives/resize';\nimport Touch from '../../directives/touch';\nimport { deprecate } from '../../util/console'; // Utils\n\nimport ThemeProvider from '../../util/ThemeProvider';\n/* @vue/component */\n\nexport default BaseItemGroup.extend({\n  name: 'v-tabs',\n  directives: {\n    Resize: Resize,\n    Touch: Touch\n  },\n  mixins: [Colorable, SSRBootable, TabsComputed, TabsProps, TabsGenerators, TabsTouch, TabsWatchers, Themeable],\n  provide: function provide() {\n    return {\n      tabGroup: this,\n      tabProxy: this.tabProxy,\n      registerItems: this.registerItems,\n      unregisterItems: this.unregisterItems\n    };\n  },\n  data: function data() {\n    return {\n      bar: [],\n      content: [],\n      isOverflowing: false,\n      nextIconVisible: false,\n      prevIconVisible: false,\n      resizeTimeout: null,\n      scrollOffset: 0,\n      sliderWidth: null,\n      sliderLeft: null,\n      startX: 0,\n      tabItems: null,\n      transitionTime: 300,\n      widths: {\n        bar: 0,\n        container: 0,\n        wrapper: 0\n      }\n    };\n  },\n  watch: {\n    items: 'onResize',\n    tabs: 'onResize'\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    checkIcons: function checkIcons() {\n      this.prevIconVisible = this.checkPrevIcon();\n      this.nextIconVisible = this.checkNextIcon();\n    },\n    checkPrevIcon: function checkPrevIcon() {\n      return this.scrollOffset > 0;\n    },\n    checkNextIcon: function checkNextIcon() {\n      // Check one scroll ahead to know the width of right-most item\n      return this.widths.container > this.scrollOffset + this.widths.wrapper;\n    },\n    callSlider: function callSlider() {\n      var _this = this;\n\n      if (this.hideSlider || !this.activeTab) return false; // Give screen time to paint\n\n      var activeTab = this.activeTab;\n      this.$nextTick(function () {\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) return;\n        _this.sliderWidth = activeTab.$el.scrollWidth;\n        _this.sliderLeft = activeTab.$el.offsetLeft;\n      });\n    },\n    // Do not process\n    // until DOM is\n    // painted\n    init: function init() {\n      /* istanbul ignore next */\n      if (this.$listeners['input']) {\n        deprecate('@input', '@change', this);\n      }\n    },\n\n    /**\r\n     * When v-navigation-drawer changes the\r\n     * width of the container, call resize\r\n     * after the transition is complete\r\n     */\n    onResize: function onResize() {\n      if (this._isDestroyed) return;\n      this.setWidths();\n      var delay = this.isBooted ? this.transitionTime : 0;\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.updateTabsView, delay);\n    },\n    overflowCheck: function overflowCheck(e, fn) {\n      this.isOverflowing && fn(e);\n    },\n    scrollTo: function scrollTo(direction) {\n      this.scrollOffset = this.newOffset(direction);\n    },\n    setOverflow: function setOverflow() {\n      this.isOverflowing = this.widths.bar < this.widths.container;\n    },\n    setWidths: function setWidths() {\n      var bar = this.$refs.bar ? this.$refs.bar.clientWidth : 0;\n      var container = this.$refs.container ? this.$refs.container.clientWidth : 0;\n      var wrapper = this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0;\n      this.widths = {\n        bar: bar,\n        container: container,\n        wrapper: wrapper\n      };\n      this.setOverflow();\n    },\n    parseNodes: function parseNodes() {\n      var item = [];\n      var items = [];\n      var slider = [];\n      var tab = [];\n      var length = (this.$slots.default || []).length;\n\n      for (var i = 0; i < length; i++) {\n        var vnode = this.$slots.default[i];\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider':\n              slider.push(vnode);\n              break;\n\n            case 'v-tabs-items':\n              items.push(vnode);\n              break;\n\n            case 'v-tab-item':\n              item.push(vnode);\n              break;\n            // case 'v-tab' - intentionally omitted\n\n            default:\n              tab.push(vnode);\n          }\n        } else {\n          tab.push(vnode);\n        }\n      }\n\n      return {\n        tab: tab,\n        slider: slider,\n        items: items,\n        item: item\n      };\n    },\n    registerItems: function registerItems(fn) {\n      this.tabItems = fn;\n      fn(this.internalValue);\n    },\n    unregisterItems: function unregisterItems() {\n      this.tabItems = null;\n    },\n    updateTabsView: function updateTabsView() {\n      this.callSlider();\n      this.scrollIntoView();\n      this.checkIcons();\n    },\n    scrollIntoView: function scrollIntoView() {\n      /* istanbul ignore next */\n      if (!this.activeTab) return;\n      if (!this.isOverflowing) return this.scrollOffset = 0;\n      var totalWidth = this.widths.wrapper + this.scrollOffset;\n      var _activeTab$$el = this.activeTab.$el,\n          clientWidth = _activeTab$$el.clientWidth,\n          offsetLeft = _activeTab$$el.offsetLeft;\n      var itemOffset = clientWidth + offsetLeft;\n      var additionalOffset = clientWidth * 0.3;\n\n      if (this.activeTab === this.items[this.items.length - 1]) {\n        additionalOffset = 0; // don't add an offset if selecting the last tab\n      }\n      /* istanbul ignore else */\n\n\n      if (offsetLeft < this.scrollOffset) {\n        this.scrollOffset = Math.max(offsetLeft - additionalOffset, 0);\n      } else if (totalWidth < itemOffset) {\n        this.scrollOffset -= totalWidth - itemOffset - additionalOffset;\n      }\n    },\n    tabProxy: function tabProxy(val) {\n      this.internalValue = val;\n    }\n  },\n  render: function render(h) {\n    var _parseNodes = this.parseNodes(),\n        tab = _parseNodes.tab,\n        slider = _parseNodes.slider,\n        items = _parseNodes.items,\n        item = _parseNodes.item;\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      directives: [{\n        name: 'resize',\n        modifiers: {\n          quiet: true\n        },\n        value: this.onResize\n      }]\n    }, [this.genBar([this.hideSlider ? null : this.genSlider(slider), tab]), h(ThemeProvider, {\n      props: {\n        dark: this.theme.isDark,\n        light: !this.theme.isDark\n      }\n    }, [this.genItems(items, item)])]);\n  }\n});",{"version":3,"sources":["../../../src/components/VTabs/VTabs.js"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_tabs.styl'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Component level mixins\nimport TabsComputed from './mixins/tabs-computed'\nimport TabsGenerators from './mixins/tabs-generators'\nimport TabsProps from './mixins/tabs-props'\nimport TabsTouch from './mixins/tabs-touch'\nimport TabsWatchers from './mixins/tabs-watchers'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\nimport { deprecate } from '../../util/console'\n\n// Utils\nimport ThemeProvider from '../../util/ThemeProvider'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-tabs',\n\n  directives: {\n    Resize,\n    Touch\n  },\n\n  mixins: [\n    Colorable,\n    SSRBootable,\n    TabsComputed,\n    TabsProps,\n    TabsGenerators,\n    TabsTouch,\n    TabsWatchers,\n    Themeable\n  ],\n\n  provide () {\n    return {\n      tabGroup: this,\n      tabProxy: this.tabProxy,\n      registerItems: this.registerItems,\n      unregisterItems: this.unregisterItems\n    }\n  },\n\n  data () {\n    return {\n      bar: [],\n      content: [],\n      isOverflowing: false,\n      nextIconVisible: false,\n      prevIconVisible: false,\n      resizeTimeout: null,\n      scrollOffset: 0,\n      sliderWidth: null,\n      sliderLeft: null,\n      startX: 0,\n      tabItems: null,\n      transitionTime: 300,\n      widths: {\n        bar: 0,\n        container: 0,\n        wrapper: 0\n      }\n    }\n  },\n\n  watch: {\n    items: 'onResize',\n    tabs: 'onResize'\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    checkIcons () {\n      this.prevIconVisible = this.checkPrevIcon()\n      this.nextIconVisible = this.checkNextIcon()\n    },\n    checkPrevIcon () {\n      return this.scrollOffset > 0\n    },\n    checkNextIcon () {\n      // Check one scroll ahead to know the width of right-most item\n      return this.widths.container > this.scrollOffset + this.widths.wrapper\n    },\n    callSlider () {\n      if (this.hideSlider || !this.activeTab) return false\n\n      // Give screen time to paint\n      const activeTab = this.activeTab\n\n      this.$nextTick(() => {\n        /* istanbul ignore if */\n        if (!activeTab || !activeTab.$el) return\n        this.sliderWidth = activeTab.$el.scrollWidth\n        this.sliderLeft = activeTab.$el.offsetLeft\n      })\n    },\n    // Do not process\n    // until DOM is\n    // painted\n    init () {\n      /* istanbul ignore next */\n      if (this.$listeners['input']) {\n        deprecate('@input', '@change', this)\n      }\n    },\n    /**\n     * When v-navigation-drawer changes the\n     * width of the container, call resize\n     * after the transition is complete\n     */\n    onResize () {\n      if (this._isDestroyed) return\n\n      this.setWidths()\n\n      const delay = this.isBooted ? this.transitionTime : 0\n\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = setTimeout(this.updateTabsView, delay)\n    },\n    overflowCheck (e, fn) {\n      this.isOverflowing && fn(e)\n    },\n    scrollTo (direction) {\n      this.scrollOffset = this.newOffset(direction)\n    },\n    setOverflow () {\n      this.isOverflowing = this.widths.bar < this.widths.container\n    },\n    setWidths () {\n      const bar = this.$refs.bar ? this.$refs.bar.clientWidth : 0\n      const container = this.$refs.container ? this.$refs.container.clientWidth : 0\n      const wrapper = this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0\n\n      this.widths = { bar, container, wrapper }\n\n      this.setOverflow()\n    },\n    parseNodes () {\n      const item = []\n      const items = []\n      const slider = []\n      const tab = []\n      const length = (this.$slots.default || []).length\n\n      for (let i = 0; i < length; i++) {\n        const vnode = this.$slots.default[i]\n\n        if (vnode.componentOptions) {\n          switch (vnode.componentOptions.Ctor.options.name) {\n            case 'v-tabs-slider': slider.push(vnode)\n              break\n            case 'v-tabs-items': items.push(vnode)\n              break\n            case 'v-tab-item': item.push(vnode)\n              break\n            // case 'v-tab' - intentionally omitted\n            default: tab.push(vnode)\n          }\n        } else {\n          tab.push(vnode)\n        }\n      }\n\n      return { tab, slider, items, item }\n    },\n    registerItems (fn) {\n      this.tabItems = fn\n      fn(this.internalValue)\n    },\n    unregisterItems () {\n      this.tabItems = null\n    },\n    updateTabsView () {\n      this.callSlider()\n      this.scrollIntoView()\n      this.checkIcons()\n    },\n    scrollIntoView () {\n      /* istanbul ignore next */\n      if (!this.activeTab) return\n      if (!this.isOverflowing) return (this.scrollOffset = 0)\n\n      const totalWidth = this.widths.wrapper + this.scrollOffset\n      const { clientWidth, offsetLeft } = this.activeTab.$el\n      const itemOffset = clientWidth + offsetLeft\n      let additionalOffset = clientWidth * 0.3\n\n      if (this.activeTab === this.items[this.items.length - 1]) {\n        additionalOffset = 0 // don't add an offset if selecting the last tab\n      }\n\n      /* istanbul ignore else */\n      if (offsetLeft < this.scrollOffset) {\n        this.scrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        this.scrollOffset -= totalWidth - itemOffset - additionalOffset\n      }\n    },\n    tabProxy (val) {\n      this.internalValue = val\n    }\n  },\n\n  render (h) {\n    const { tab, slider, items, item } = this.parseNodes()\n\n    return h('div', {\n      staticClass: 'v-tabs',\n      directives: [{\n        name: 'resize',\n        modifiers: { quiet: true },\n        value: this.onResize\n      }]\n    }, [\n      this.genBar([this.hideSlider ? null : this.genSlider(slider), tab]),\n      h(ThemeProvider, {\n        props: { dark: this.theme.isDark, light: !this.theme.isDark }\n      }, [\n        this.genItems(items, item)\n      ])\n    ])\n  }\n})\n"],"sourceRoot":""}]}