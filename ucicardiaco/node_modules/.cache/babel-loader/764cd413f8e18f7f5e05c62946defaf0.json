{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VItemGroup\\VItemGroup.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VItemGroup\\VItemGroup.js","mtime":1589651992285},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Styles\n\n\nimport '../../../src/stylus/components/_item-group.styl';\nimport Proxyable from '../../mixins/proxyable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nexport var BaseItemGroup = mixins(Proxyable, Themeable).extend({\n  name: 'base-item-group',\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active'\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null\n    },\n    multiple: Boolean\n  },\n  data: function data() {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined ? this.value : this.multiple ? [] : undefined,\n      items: []\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _extends({}, this.themeClasses);\n    },\n    selectedItems: function selectedItems() {\n      var _this = this;\n\n      return this.items.filter(function (item, index) {\n        return _this.toggleMethod(_this.getValue(item, index));\n      });\n    },\n    selectedValues: function selectedValues() {\n      return Array.isArray(this.internalValue) ? this.internalValue : [this.internalValue];\n    },\n    toggleMethod: function toggleMethod() {\n      var _this2 = this;\n\n      if (!this.multiple) {\n        return function (v) {\n          return _this2.internalValue === v;\n        };\n      }\n\n      var internalValue = this.internalValue;\n\n      if (Array.isArray(internalValue)) {\n        return function (v) {\n          return internalValue.includes(v);\n        };\n      }\n\n      return function () {\n        return false;\n      };\n    }\n  },\n  watch: {\n    internalValue: function internalValue() {\n      // https://github.com/vuetifyjs/vuetify/issues/5352\n      this.$nextTick(this.updateItemsState);\n    }\n  },\n  created: function created() {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this);\n    }\n  },\n  methods: {\n    getValue: function getValue(item, i) {\n      return item.value == null || item.value === '' ? i : item.value;\n    },\n    onClick: function onClick(item, index) {\n      this.updateInternalValue(this.getValue(item, index));\n    },\n    register: function register(item) {\n      var _this3 = this;\n\n      var index = this.items.push(item) - 1;\n      item.$on('change', function () {\n        return _this3.onClick(item, index);\n      }); // If no value provided and mandatory,\n      // assign first registered item\n\n      if (this.mandatory && this.internalLazyValue == null) {\n        this.updateMandatory();\n      }\n\n      this.updateItem(item, index);\n    },\n    unregister: function unregister(item) {\n      if (this._isDestroyed) return;\n      var index = this.items.indexOf(item);\n      var value = this.getValue(item, index);\n      this.items.splice(index, 1);\n      var valueIndex = this.selectedValues.indexOf(value); // Items is not selected, do nothing\n\n      if (valueIndex < 0) return; // If not mandatory, use regular update process\n\n      if (!this.mandatory) {\n        return this.updateInternalValue(value);\n      } // Remove the value\n\n\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(function (v) {\n          return v !== value;\n        });\n      } else {\n        this.internalValue = undefined;\n      } // If mandatory and we have no selection\n      // add the last item as value\n\n      /* istanbul ignore else */\n\n\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true);\n      }\n    },\n    updateItem: function updateItem(item, index) {\n      var value = this.getValue(item, index);\n      item.isActive = this.toggleMethod(value);\n    },\n    updateItemsState: function updateItemsState() {\n      if (this.mandatory && !this.selectedItems.length) {\n        return this.updateMandatory();\n      } // TODO: Make this smarter so it\n      // doesn't have to iterate every\n      // child in an update\n\n\n      this.items.forEach(this.updateItem);\n    },\n    updateInternalValue: function updateInternalValue(value) {\n      this.multiple ? this.updateMultiple(value) : this.updateSingle(value);\n    },\n    updateMandatory: function updateMandatory(last) {\n      if (!this.items.length) return;\n      var index = last ? this.items.length - 1 : 0;\n      this.updateInternalValue(this.getValue(this.items[index], index));\n    },\n    updateMultiple: function updateMultiple(value) {\n      var defaultValue = Array.isArray(this.internalValue) ? this.internalValue : [];\n      var internalValue = defaultValue.slice();\n      var index = internalValue.findIndex(function (val) {\n        return val === value;\n      });\n      if (this.mandatory && // Item already exists\n      index > -1 && // value would be reduced below min\n      internalValue.length - 1 < 1) return;\n      if ( // Max is set\n      this.max != null && // Item doesn't exist\n      index < 0 && // value woudl be increased above max\n      internalValue.length + 1 > this.max) return;\n      index > -1 ? internalValue.splice(index, 1) : internalValue.push(value);\n      this.internalValue = internalValue;\n    },\n    updateSingle: function updateSingle(value) {\n      var isSame = value === this.internalValue;\n      if (this.mandatory && isSame) return;\n      this.internalValue = isSame ? undefined : value;\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-item-group',\n      class: this.classes\n    }, this.$slots.default);\n  }\n});\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n  provide: function provide() {\n    return {\n      itemGroup: this\n    };\n  }\n});",{"version":3,"sources":["../../../src/components/VItemGroup/VItemGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../../stylus/components/_item-group.styl'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\ntype GroupableInstance = InstanceType<typeof Groupable> & { value?: any }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active'\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null\n    },\n    multiple: Boolean\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[]\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        ...this.themeClasses\n      }\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    }\n  },\n\n  watch: {\n    internalValue () {\n      // https://github.com/vuetifyjs/vuetify/issues/5352\n      this.$nextTick(this.updateItemsState)\n    }\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance, index: number) {\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item, index))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && this.internalLazyValue == null) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    updateItemsState () {\n      if (this.mandatory &&\n        !this.selectedItems.length\n      ) {\n        return this.updateMandatory()\n      }\n\n      // TODO: Make this smarter so it\n      // doesn't have to iterate every\n      // child in an update\n      this.items.forEach(this.updateItem)\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const index = last ? this.items.length - 1 : 0\n\n      this.updateInternalValue(\n        this.getValue(this.items[index], index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value woudl be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    }\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-item-group',\n      class: this.classes\n    }, this.$slots.default)\n  }\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this\n    }\n  }\n})\n"],"sourceRoot":""}]}