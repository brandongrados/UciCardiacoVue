{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\returnable.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\returnable.js","mtime":1590258019921},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'returnable',\n  props: {\n    returnValue: null\n  },\n  data: function data() {\n    return {\n      isActive: false,\n      originalValue: null\n    };\n  },\n  watch: {\n    isActive: function isActive(val) {\n      if (val) {\n        this.originalValue = this.returnValue;\n      } else {\n        this.$emit('update:returnValue', this.originalValue);\n      }\n    }\n  },\n  methods: {\n    save: function save(value) {\n      this.originalValue = value;\n      this.isActive = false;\n    }\n  }\n});",{"version":3,"sources":["../../src/mixins/returnable.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAEA;;AACA,eAAe,GAAA,CAAA,MAAA,CAAW;AACxB,EAAA,IAAA,EADwB,YAAA;AAGxB,EAAA,KAAA,EAAO;AACL,IAAA,WAAA,EAAa;AADR,GAHiB;AAOxB,EAAA,IAAA,EAAM,SAAA,IAAA,GAAA;AAAA,WAAO;AACX,MAAA,QAAA,EADW,KAAA;AAEX,MAAA,aAAA,EAAe;AAFJ,KAAP;AAPkB,GAAA;AAYxB,EAAA,KAAA,EAAO;AACL,IAAA,QADK,EAAA,SAAA,QAAA,CAAA,GAAA,EACQ;AACX,UAAA,GAAA,EAAS;AACP,aAAA,aAAA,GAAqB,KAArB,WAAA;AADF,OAAA,MAEO;AACL,aAAA,KAAA,CAAA,oBAAA,EAAiC,KAAjC,aAAA;AACD;AACF;AAPI,GAZiB;AAsBxB,EAAA,OAAA,EAAS;AACP,IAAA,IADO,EAAA,SAAA,IAAA,CAAA,KAAA,EACS;AACd,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACD;AAJM;AAtBe,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:returnValue', this.originalValue)\n      }\n    }\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      this.isActive = false\n    }\n  }\n})\n"],"sourceRoot":""}]}