{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VSwitch\\VSwitch.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VSwitch\\VSwitch.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport '../../../src/stylus/components/_selection-controls.styl';\nimport '../../../src/stylus/components/_switch.styl'; // Mixins\n\nimport Selectable from '../../mixins/selectable'; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport { VFabTransition } from '../transitions';\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'; // Helpers\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default {\n  name: 'v-switch',\n  directives: {\n    Touch: Touch\n  },\n  mixins: [Selectable],\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-input--selection-controls v-input--switch': true\n      };\n    },\n    switchData: function switchData() {\n      return this.setTextColor(this.loading ? undefined : this.computedColor, {\n        class: this.themeClasses\n      });\n    }\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n    genSwitch: function genSwitch() {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', this.$attrs), !this.disabled && this.genRipple(this.setTextColor(this.computedColor, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', _extends({\n        staticClass: 'v-input--switch__track'\n      }, this.switchData)), this.$createElement('div', _extends({\n        staticClass: 'v-input--switch__thumb'\n      }, this.switchData), [this.genProgress()])]);\n    },\n    genProgress: function genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n    onKeydown: function onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n  }\n};",{"version":3,"sources":["../../../src/components/VSwitch/VSwitch.js"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_selection-controls.styl'\nimport '../../stylus/components/_switch.styl'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  mixins: [\n    Selectable\n  ],\n\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n\n  computed: {\n    classes () {\n      return {\n        'v-input--selection-controls v-input--switch': true\n      }\n    },\n    switchData () {\n      return this.setTextColor(this.loading ? undefined : this.computedColor, {\n        class: this.themeClasses\n      })\n    }\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return [\n        this.genSwitch(),\n        this.genLabel()\n      ]\n    },\n    genSwitch () {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [\n        this.genInput('checkbox', this.$attrs),\n        !this.disabled && this.genRipple(this.setTextColor(this.computedColor, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight\n            }\n          }]\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData\n        }, [this.genProgress()])\n      ])\n    },\n    genProgress () {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true\n            }\n          })\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    }\n  }\n}\n"],"sourceRoot":""}]}