{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VExpansionPanel\\VExpansionPanelContent.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VExpansionPanel\\VExpansionPanelContent.js","mtime":1589651992226},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport { VExpandTransition } from '../transitions';\nimport Bootable from '../../mixins/bootable';\nimport Toggleable from '../../mixins/toggleable';\nimport Rippleable from '../../mixins/rippleable';\nimport { inject as RegistrableInject } from '../../mixins/registrable';\nimport VIcon from '../VIcon';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\nexport default mixins(Bootable, Toggleable, Rippleable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n/* @vue/component */\n).extend({\n  name: 'v-expansion-panel-content',\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$vuetify.icons.expand'\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      height: 'auto'\n    };\n  },\n  computed: {\n    containerClasses: function containerClasses() {\n      return {\n        'v-expansion-panel__container--active': this.isActive,\n        'v-expansion-panel__container--disabled': this.isDisabled\n      };\n    },\n    isDisabled: function isDisabled() {\n      return this.expansionPanel.disabled || this.disabled;\n    },\n    isReadonly: function isReadonly() {\n      return this.expansionPanel.readonly || this.readonly;\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.expansionPanel.register(this); // Can be removed once fully deprecated\n\n    if (typeof this.value !== 'undefined') consoleWarn('v-model has been deprecated', this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.expansionPanel.unregister(this);\n  },\n  methods: {\n    onKeydown: function onKeydown(e) {\n      // Ensure element is the activeElement\n      if (e.keyCode === 13 && this.$el === document.activeElement) this.expansionPanel.panelClick(this._uid);\n    },\n    onHeaderClick: function onHeaderClick() {\n      this.isReadonly || this.expansionPanel.panelClick(this._uid);\n    },\n    genBody: function genBody() {\n      return this.$createElement('div', {\n        ref: 'body',\n        class: 'v-expansion-panel__body',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, this.showLazyContent(this.$slots.default));\n    },\n    genHeader: function genHeader() {\n      var children = [].concat(_toConsumableArray(this.$slots.header));\n      if (!this.hideActions) children.push(this.genIcon());\n      return this.$createElement('div', {\n        staticClass: 'v-expansion-panel__header',\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: {\n          click: this.onHeaderClick\n        }\n      }, children);\n    },\n    genIcon: function genIcon() {\n      var icon = this.$slots.actions || [this.$createElement(VIcon, this.expandIcon)];\n      return this.$createElement('transition', {\n        attrs: {\n          name: 'fade-transition'\n        }\n      }, [this.$createElement('div', {\n        staticClass: 'v-expansion-panel__header__icon',\n        directives: [{\n          name: 'show',\n          value: !this.isDisabled\n        }]\n      }, icon)]);\n    },\n    toggle: function toggle(active) {\n      if (active) this.isBooted = true;\n      this.isActive = active;\n    }\n  },\n  render: function render(h) {\n    var children = [];\n    this.$slots.header && children.push(this.genHeader());\n    children.push(h(VExpandTransition, [this.genBody()]));\n    return h('li', {\n      staticClass: 'v-expansion-panel__container',\n      class: this.containerClasses,\n      attrs: {\n        tabindex: this.isReadonly || this.isDisabled ? null : 0\n      },\n      on: {\n        keydown: this.onKeydown\n      }\n    }, children);\n  }\n});",{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"names":[],"mappings":"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","sourcesContent":["import { VExpandTransition } from '../transitions'\n\nimport Bootable from '../../mixins/bootable'\nimport Toggleable from '../../mixins/toggleable'\nimport Rippleable from '../../mixins/rippleable'\nimport { Registrable, inject as RegistrableInject } from '../../mixins/registrable'\n\nimport VIcon from '../VIcon'\nimport VExpansionPanel from './VExpansionPanel'\n\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport Vue, { VNode } from 'vue'\n\nimport { consoleWarn } from '../../util/console'\n\ntype VExpansionPanelInstance = InstanceType<typeof VExpansionPanel>\n\ninterface options extends Vue {\n  expansionPanel: VExpansionPanelInstance\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Bootable,\n    typeof Toggleable,\n    typeof Rippleable,\n    Registrable<'expansionPanel'>\n  ]>\n/* eslint-enable indent */\n>(\n  Bootable,\n  Toggleable,\n  Rippleable,\n  RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel-content',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$vuetify.icons.expand'\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false\n    }\n  },\n\n  data: () => ({\n    height: 'auto'\n  }),\n\n  computed: {\n    containerClasses (): object {\n      return {\n        'v-expansion-panel__container--active': this.isActive,\n        'v-expansion-panel__container--disabled': this.isDisabled\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.readonly || this.readonly\n    }\n  },\n\n  beforeMount () {\n    this.expansionPanel.register(this)\n\n    // Can be removed once fully deprecated\n    if (typeof this.value !== 'undefined') consoleWarn('v-model has been deprecated', this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregister(this)\n  },\n\n  methods: {\n    onKeydown (e: KeyboardEvent) {\n      // Ensure element is the activeElement\n      if (\n        e.keyCode === 13 &&\n        this.$el === document.activeElement\n      ) this.expansionPanel.panelClick(this._uid)\n    },\n    onHeaderClick () {\n      this.isReadonly || this.expansionPanel.panelClick(this._uid)\n    },\n    genBody () {\n      return this.$createElement('div', {\n        ref: 'body',\n        class: 'v-expansion-panel__body',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }] as any\n      }, this.showLazyContent(this.$slots.default))\n    },\n    genHeader () {\n      const children = [...this.$slots.header]\n\n      if (!this.hideActions) children.push(this.genIcon())\n\n      return this.$createElement('div', {\n        staticClass: 'v-expansion-panel__header',\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }] as any,\n        on: {\n          click: this.onHeaderClick\n        }\n      }, children)\n    },\n    genIcon () {\n      const icon = this.$slots.actions ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement('transition', {\n        attrs: { name: 'fade-transition' }\n      }, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel__header__icon',\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled\n          }] as any\n        }, icon)\n      ])\n    },\n    toggle (active: boolean) {\n      if (active) this.isBooted = true\n\n      this.isActive = active\n    }\n  },\n\n  render (h): VNode {\n    const children = []\n\n    this.$slots.header && children.push(this.genHeader())\n    children.push(h(VExpandTransition, [this.genBody()]))\n\n    return h('li', {\n      staticClass: 'v-expansion-panel__container',\n      class: this.containerClasses,\n      attrs: {\n        tabindex: this.isReadonly || this.isDisabled ? null : 0\n      },\n      on: {\n        keydown: this.onKeydown\n      }\n    }, children)\n  }\n})\n"],"sourceRoot":""}]}