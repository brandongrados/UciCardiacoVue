{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VIcon\\VIcon.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VIcon\\VIcon.js","mtime":1590258019316},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.string.small\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport '../../../src/stylus/components/_icons.styl'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Sizeable from '../../mixins/sizeable';\nimport Themeable from '../../mixins/themeable'; // Util\n\nimport { convertToUnit, keys, remapInternalIcon } from '../../util/helpers'; // Types\n\nimport Vue from 'vue';\nimport mixins from '../../util/mixins';\nvar SIZE_MAP;\n\n(function (SIZE_MAP) {\n  SIZE_MAP[\"small\"] = \"16px\";\n  SIZE_MAP[\"default\"] = \"24px\";\n  SIZE_MAP[\"medium\"] = \"28px\";\n  SIZE_MAP[\"large\"] = \"36px\";\n  SIZE_MAP[\"xLarge\"] = \"40px\";\n})(SIZE_MAP || (SIZE_MAP = {}));\n\nfunction isFontAwesome5(iconType) {\n  return ['fas', 'far', 'fal', 'fab'].some(function (val) {\n    return iconType.includes(val);\n  });\n}\n\nvar VIcon = mixins(Colorable, Sizeable, Themeable\n/* @vue/component */\n).extend({\n  name: 'v-icon',\n  props: {\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean\n  },\n  render: function render(h) {\n    var _extends2;\n\n    var sizes = {\n      small: this.small,\n      medium: this.medium,\n      large: this.large,\n      xLarge: this.xLarge\n    };\n    var explicitSize = keys(sizes).find(function (key) {\n      return sizes[key] && !!key;\n    });\n    var fontSize = explicitSize && SIZE_MAP[explicitSize] || convertToUnit(this.size);\n    var newChildren = [];\n    var data = {\n      staticClass: 'v-icon',\n      attrs: _extends({\n        'aria-hidden': true\n      }, this.$attrs),\n      on: this.$listeners\n    };\n    if (fontSize) data.style = {\n      fontSize: fontSize\n    };\n    var iconName = '';\n    if (this.$slots.default) iconName = this.$slots.default[0].text; // Remap internal names like '$vuetify.icons.cancel' to the current name for that icon\n\n    iconName = remapInternalIcon(this, iconName);\n    var iconType = 'material-icons'; // Material Icon delimiter is _\n    // https://material.io/icons/\n\n    var delimiterIndex = iconName.indexOf('-');\n    var isCustomIcon = delimiterIndex > -1;\n\n    if (isCustomIcon) {\n      iconType = iconName.slice(0, delimiterIndex);\n      if (isFontAwesome5(iconType)) iconType = ''; // Assume if not a custom icon\n      // is Material Icon font\n    } else newChildren.push(iconName);\n\n    data.class = _extends((_extends2 = {\n      'v-icon--disabled': this.disabled,\n      'v-icon--left': this.left,\n      'v-icon--link': this.$listeners.click || this.$listeners['!click'],\n      'v-icon--right': this.right\n    }, _defineProperty(_extends2, iconType, true), _defineProperty(_extends2, iconName, isCustomIcon), _extends2), this.themeClasses);\n    return h('i', this.setTextColor(this.color, data), newChildren);\n  }\n});\nexport default Vue.extend({\n  name: 'v-icon',\n  $_wrapperFor: VIcon,\n  functional: true,\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        children = _ref.children;\n    var iconName = ''; // Support usage of v-text and v-html\n\n    if (data.domProps) {\n      iconName = data.domProps.textContent || data.domProps.innerHTML || iconName; // Remove nodes so it doesn't\n      // overwrite our changes\n\n      delete data.domProps.textContent;\n      delete data.domProps.innerHTML;\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children);\n  }\n});",{"version":3,"sources":["../../../src/components/VIcon/VIcon.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,4CAAA,C,CAEA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,OAAA,SAAA,MAAA,wBAAA,C,CAEA;;AACA,SAAA,aAAA,EAAA,IAAA,EAAA,iBAAA,QAAA,oBAAA,C,CAMA;;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAEA,IAAA,QAAA;;AAAA,CAAA,UAAA,QAAA,EAAa;AACX,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,MAAA;AACA,EAAA,QAAA,CAAA,QAAA,CAAA,GAAA,MAAA;AALF,CAAA,EAAK,QAAA,KAAA,QAAA,GAAL,EAAK,CAAL;;AAQA,SAAA,cAAA,CAAA,QAAA,EAAyC;AACvC,SAAO,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,CAAkC,UAAA,GAAA,EAAA;AAAA,WAAO,QAAA,CAAA,QAAA,CAAP,GAAO,CAAP;AAAzC,GAAO,CAAP;AACD;;AAED,IAAM,KAAA,GAAQ,MAAA,CAAA,SAAA,EAAA,QAAA,EAGZ;AACF;AAJc,CAAA,CAAA,MAAA,CAKL;AACP,EAAA,IAAA,EADO,QAAA;AAGP,EAAA,KAAA,EAAO;AACL,IAAA,QAAA,EADK,OAAA;AAEL,IAAA,IAAA,EAFK,OAAA;AAGL,IAAA,KAAA,EAAO;AAHF,GAHA;AASP,EAAA,MATO,EAAA,SAAA,MAAA,CAAA,CAAA,EASE;AAAA,QAAA,SAAA;;AACP,QAAM,KAAA,GAAQ;AACZ,MAAA,KAAA,EAAO,KADK,KAAA;AAEZ,MAAA,MAAA,EAAQ,KAFI,MAAA;AAGZ,MAAA,KAAA,EAAO,KAHK,KAAA;AAIZ,MAAA,MAAA,EAAQ,KAAK;AAJD,KAAd;AAMA,QAAM,YAAA,GAAe,IAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAiB,UAAA,GAAA,EAAA;AAAA,aAAO,KAAA,CAAA,GAAA,CAAA,IAAc,CAAC,CAAtB,GAAA;AAAtC,KAAqB,CAArB;AACA,QAAM,QAAA,GAAY,YAAA,IAAgB,QAAA,CAAjB,YAAiB,CAAhB,IAA2C,aAAA,CAAc,KAA3E,IAA6D,CAA7D;AAEA,QAAM,WAAA,GAAN,EAAA;AACA,QAAM,IAAA,GAAkB;AACtB,MAAA,WAAA,EADsB,QAAA;AAEtB,MAAA,KAAA,EAAA,QAAA,CAAA;AACE,uBAAe;AADjB,OAAA,EAEK,KAJiB,MAEtB,CAFsB;AAMtB,MAAA,EAAA,EAAI,KAAK;AANa,KAAxB;AASA,QAAA,QAAA,EAAc,IAAA,CAAA,KAAA,GAAa;AAAE,MAAA,QAAA,EAAf;AAAa,KAAb;AAEd,QAAI,QAAA,GAAJ,EAAA;AACA,QAAI,KAAA,MAAA,CAAJ,OAAA,EAAyB,QAAA,GAAW,KAAA,MAAA,CAAA,OAAA,CAAA,CAAA,EAAX,IAAA,CAvBlB,CAyBP;;AACA,IAAA,QAAA,GAAW,iBAAA,CAAA,IAAA,EAAX,QAAW,CAAX;AAEA,QAAI,QAAA,GAAJ,gBAAA,CA5BO,CA6BP;AACA;;AACA,QAAM,cAAA,GAAiB,QAAA,CAAA,OAAA,CAAvB,GAAuB,CAAvB;AACA,QAAM,YAAA,GAAe,cAAA,GAAiB,CAAtC,CAAA;;AAEA,QAAA,YAAA,EAAkB;AAChB,MAAA,QAAA,GAAW,QAAA,CAAA,KAAA,CAAA,CAAA,EAAX,cAAW,CAAX;AAEA,UAAI,cAAA,CAAJ,QAAI,CAAJ,EAA8B,QAAA,GAAA,EAAA,CAHd,CAIhB;AACA;AALF,KAAA,MAMO,WAAA,CAAA,IAAA,CAAA,QAAA;;AAEP,IAAA,IAAA,CAAA,KAAA,GAAA,QAAA,EAAA,SAAA,GAAA;AACE,0BAAoB,KADtB,QAAA;AAEE,sBAAgB,KAFlB,IAAA;AAGE,sBAAgB,KAAA,UAAA,CAAA,KAAA,IAAyB,KAAA,UAAA,CAH3C,QAG2C,CAH3C;AAIE,uBAAiB,KAAK;AAJxB,KAAA,EAAA,eAAA,CAAA,SAAA,EAAA,QAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,CAAA,EAAA,SAAA,GAOK,KAPL,YAAA,CAAA;AAUA,WAAO,CAAA,CAAA,GAAA,EAAO,KAAA,YAAA,CAAkB,KAAlB,KAAA,EAAP,IAAO,CAAP,EAAP,WAAO,CAAP;AACD;AA9DM,CALK,CAAd;AAsEA,eAAe,GAAA,CAAA,MAAA,CAAW;AACxB,EAAA,IAAA,EADwB,QAAA;AAGxB,EAAA,YAAA,EAHwB,KAAA;AAKxB,EAAA,UAAA,EALwB,IAAA;AAOxB,EAAA,MAPwB,EAAA,SAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAOK;AAAA,QAAhB,IAAgB,GAAA,IAAA,CAAhB,IAAgB;AAAA,QAAV,QAAU,GAAA,IAAA,CAAV,QAAU;AAC3B,QAAI,QAAA,GAAJ,EAAA,CAD2B,CAG3B;;AACA,QAAI,IAAA,CAAJ,QAAA,EAAmB;AACjB,MAAA,QAAA,GAAW,IAAA,CAAA,QAAA,CAAA,WAAA,IACT,IAAA,CAAA,QAAA,CADS,SAAA,IAAX,QAAA,CADiB,CAKjB;AACA;;AACA,aAAO,IAAA,CAAA,QAAA,CAAP,WAAA;AACA,aAAO,IAAA,CAAA,QAAA,CAAP,SAAA;AACD;;AAED,WAAO,CAAA,CAAA,KAAA,EAAA,IAAA,EAAe,QAAA,GAAW,CAAX,QAAW,CAAX,GAAtB,QAAO,CAAP;AACD;AAvBuB,CAAX,CAAf","sourcesContent":["import '../../stylus/components/_icons.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Sizeable from '../../mixins/sizeable'\nimport Themeable from '../../mixins/themeable'\n\n// Util\nimport {\n  convertToUnit,\n  keys,\n  remapInternalIcon\n} from '../../util/helpers'\n\n// Types\nimport Vue, { VNode, VNodeChildren, VNodeData } from 'vue'\nimport mixins from '../../util/mixins'\n\nenum SIZE_MAP {\n  small = '16px',\n  default = '24px',\n  medium = '28px',\n  large = '36px',\n  xLarge = '40px'\n}\n\nfunction isFontAwesome5 (iconType: string): boolean {\n  return ['fas', 'far', 'fal', 'fab'].some(val => iconType.includes(val))\n}\n\nconst VIcon = mixins(\n  Colorable,\n  Sizeable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-icon',\n\n  props: {\n    disabled: Boolean,\n    left: Boolean,\n    right: Boolean\n  },\n\n  render (h): VNode {\n    const sizes = {\n      small: this.small,\n      medium: this.medium,\n      large: this.large,\n      xLarge: this.xLarge\n    }\n    const explicitSize = keys(sizes).find(key => sizes[key] && !!key)\n    const fontSize = (explicitSize && SIZE_MAP[explicitSize]) || convertToUnit(this.size)\n\n    const newChildren: VNodeChildren = []\n    const data: VNodeData = {\n      staticClass: 'v-icon',\n      attrs: {\n        'aria-hidden': true,\n        ...this.$attrs\n      },\n      on: this.$listeners\n    }\n\n    if (fontSize) data.style = { fontSize }\n\n    let iconName = ''\n    if (this.$slots.default) iconName = this.$slots.default[0].text!\n\n    // Remap internal names like '$vuetify.icons.cancel' to the current name for that icon\n    iconName = remapInternalIcon(this, iconName)\n\n    let iconType = 'material-icons'\n    // Material Icon delimiter is _\n    // https://material.io/icons/\n    const delimiterIndex = iconName.indexOf('-')\n    const isCustomIcon = delimiterIndex > -1\n\n    if (isCustomIcon) {\n      iconType = iconName.slice(0, delimiterIndex)\n\n      if (isFontAwesome5(iconType)) iconType = ''\n      // Assume if not a custom icon\n      // is Material Icon font\n    } else newChildren.push(iconName)\n\n    data.class = {\n      'v-icon--disabled': this.disabled,\n      'v-icon--left': this.left,\n      'v-icon--link': this.$listeners.click || this.$listeners['!click'],\n      'v-icon--right': this.right,\n      [iconType]: true,\n      [iconName]: isCustomIcon,\n      ...this.themeClasses\n    }\n\n    return h('i', this.setTextColor(this.color, data), newChildren)\n  }\n})\n\nexport default Vue.extend({\n  name: 'v-icon',\n\n  $_wrapperFor: VIcon,\n\n  functional: true,\n\n  render (h, { data, children }): VNode {\n    let iconName = ''\n\n    // Support usage of v-text and v-html\n    if (data.domProps) {\n      iconName = data.domProps.textContent ||\n        data.domProps.innerHTML ||\n        iconName\n\n      // Remove nodes so it doesn't\n      // overwrite our changes\n      delete data.domProps.textContent\n      delete data.domProps.innerHTML\n    }\n\n    return h(VIcon, data, iconName ? [iconName] : children)\n  }\n})\n"],"sourceRoot":""}]}