{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\stackable.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\stackable.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport { getZIndex } from '../util/helpers';\n/* @vue/component */\n\nexport default {\n  name: 'stackable',\n  data: function data() {\n    return {\n      stackBase: null,\n      stackClass: 'unpecified',\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0\n    };\n  },\n  computed: {\n    /**\n     * Currently active z-index\n     *\n     * @return {number}\n     */\n    activeZIndex: function activeZIndex() {\n      if (typeof window === 'undefined') return 0;\n      var content = this.stackElement || this.$refs.content; // Return current zindex if not active\n\n      var index = !this.isActive ? getZIndex(content) : this.getMaxZIndex(this.stackExclude || [content]) + 2;\n      if (index == null) return index; // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n\n      return parseInt(index);\n    }\n  },\n  methods: {\n    getMaxZIndex: function getMaxZIndex() {\n      var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var base = this.stackBase || this.$el; // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n\n      var zis = [this.stackMinZIndex, getZIndex(base)]; // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n\n      var activeElements = [].concat(_toConsumableArray(document.getElementsByClassName(this.stackClass))); // Get z-index for all active dialogs\n\n      for (var index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]));\n        }\n      }\n\n      return Math.max.apply(Math, zis);\n    }\n  }\n};",{"version":3,"sources":["../../src/mixins/stackable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAA,SAAA,QAAA,iBAAA;AAEA;;AACA,eAAe;AACb,EAAA,IAAA,EADa,WAAA;AAGb,EAAA,IAHa,EAAA,SAAA,IAAA,GAGT;AACF,WAAO;AACL,MAAA,SAAA,EADK,IAAA;AAEL,MAAA,UAAA,EAFK,YAAA;AAGL,MAAA,YAAA,EAHK,IAAA;AAIL,MAAA,YAAA,EAJK,IAAA;AAKL,MAAA,cAAA,EAAgB;AALX,KAAP;AAJW,GAAA;AAYb,EAAA,QAAA,EAAU;AACR;;;;;AAKA,IAAA,YANQ,EAAA,SAAA,YAAA,GAMI;AACV,UAAI,OAAA,MAAA,KAAJ,WAAA,EAAmC,OAAA,CAAA;AAEnC,UAAM,OAAA,GAAU,KAAA,YAAA,IAAqB,KAAA,KAAA,CAArC,OAAA,CAHU,CAIV;;AAEA,UAAM,KAAA,GAAQ,CAAC,KAAD,QAAA,GACV,SAAA,CADU,OACV,CADU,GAEV,KAAA,YAAA,CAAkB,KAAA,YAAA,IAAqB,CAAvC,OAAuC,CAAvC,IAFJ,CAAA;AAIA,UAAI,KAAA,IAAJ,IAAA,EAAmB,OAAA,KAAA,CAVT,CAYV;AACA;;AACA,aAAO,QAAA,CAAP,KAAO,CAAP;AACD;AArBO,GAZG;AAmCb,EAAA,OAAA,EAAS;AACP,IAAA,YADO,EAAA,SAAA,YAAA,GACmB;AAAA,UAAZ,OAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;AACxB,UAAM,IAAA,GAAO,KAAA,SAAA,IAAkB,KAA/B,GAAA,CADwB,CAExB;AACA;;AACA,UAAM,GAAA,GAAM,CAAC,KAAD,cAAA,EAAsB,SAAA,CAAlC,IAAkC,CAAtB,CAAZ,CAJwB,CAKxB;AACA;AACA;;AACA,UAAM,cAAA,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAqB,QAAA,CAAA,sBAAA,CAAgC,KAA3D,UAA2B,CAArB,CAAA,CAAN,CARwB,CAUxB;;AACA,WAAK,IAAI,KAAA,GAAT,CAAA,EAAoB,KAAA,GAAQ,cAAA,CAA5B,MAAA,EAAmD,KAAnD,EAAA,EAA4D;AAC1D,YAAI,CAAC,OAAA,CAAA,QAAA,CAAiB,cAAA,CAAtB,KAAsB,CAAjB,CAAL,EAA8C;AAC5C,UAAA,GAAA,CAAA,IAAA,CAAS,SAAA,CAAU,cAAA,CAAnB,KAAmB,CAAV,CAAT;AACD;AACF;;AAED,aAAO,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAP,GAAO,CAAP;AACD;AAnBM;AAnCI,CAAf","sourcesContent":["import { getZIndex } from '../util/helpers'\n\n/* @vue/component */\nexport default {\n  name: 'stackable',\n\n  data () {\n    return {\n      stackBase: null,\n      stackClass: 'unpecified',\n      stackElement: null,\n      stackExclude: null,\n      stackMinZIndex: 0\n    }\n  },\n  computed: {\n    /**\n     * Currently active z-index\n     *\n     * @return {number}\n     */\n    activeZIndex () {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    }\n  },\n  methods: {\n    getMaxZIndex (exclude = []) {\n      const base = this.stackBase || this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [...document.getElementsByClassName(this.stackClass)]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    }\n  }\n}\n"],"sourceRoot":""}]}