{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VAvatar\\VAvatar.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VAvatar\\VAvatar.js","mtime":1590258018575},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.object.assign\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport '../../../src/stylus/components/_avatars.styl'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Colorable).extend({\n  name: 'v-avatar',\n  functional: true,\n  props: {\n    // TODO: inherit these\n    color: String,\n    size: {\n      type: [Number, String],\n      default: 48\n    },\n    tile: Boolean\n  },\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        props = _ref.props,\n        children = _ref.children;\n    data.staticClass = ('v-avatar ' + (data.staticClass || '')).trim();\n    if (props.tile) data.staticClass += ' v-avatar--tile';\n    var size = convertToUnit(props.size);\n    data.style = _extends({\n      height: size,\n      width: size\n    }, data.style);\n    return h('div', Colorable.options.methods.setBackgroundColor(props.color, data), children);\n  }\n});",{"version":3,"sources":["../../../src/components/VAvatar/VAvatar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAA,8CAAA,C,CAEA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,SAAA,aAAA,QAAA,oBAAA;AAIA,OAAA,MAAA,MAAA,mBAAA;AAEA;;AACA,eAAe,MAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAyB;AACtC,EAAA,IAAA,EADsC,UAAA;AAGtC,EAAA,UAAA,EAHsC,IAAA;AAKtC,EAAA,KAAA,EAAO;AACL;AACA,IAAA,KAAA,EAFK,MAAA;AAIL,IAAA,IAAA,EAAM;AACJ,MAAA,IAAA,EAAM,CAAA,MAAA,EADF,MACE,CADF;AAEJ,MAAA,OAAA,EAAS;AAFL,KAJD;AAQL,IAAA,IAAA,EAAM;AARD,GAL+B;AAgBtC,EAAA,MAhBsC,EAAA,SAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAgBF;AAAA,QAAvB,IAAuB,GAAA,IAAA,CAAvB,IAAuB;AAAA,QAAjB,KAAiB,GAAA,IAAA,CAAjB,KAAiB;AAAA,QAAV,QAAU,GAAA,IAAA,CAAV,QAAU;AAClC,IAAA,IAAA,CAAA,WAAA,GAAmB,CAAA,eAAa,IAAA,CAAA,WAAA,IAAb,EAAA,CAAA,EAAnB,IAAmB,EAAnB;AAEA,QAAI,KAAA,CAAJ,IAAA,EAAgB,IAAA,CAAA,WAAA,IAAA,iBAAA;AAEhB,QAAM,IAAA,GAAO,aAAA,CAAc,KAAA,CAA3B,IAAa,CAAb;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,QAAA,CAAA;AACE,MAAA,MAAA,EADF,IAAA;AAEE,MAAA,KAAA,EAAO;AAFT,KAAA,EAGK,IAAA,CAHL,KAAA,CAAA;AAMA,WAAO,CAAA,CAAA,KAAA,EAAS,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,kBAAA,CAA6C,KAAA,CAA7C,KAAA,EAAT,IAAS,CAAT,EAAP,QAAO,CAAP;AACD;AA7BqC,CAAzB,CAAf","sourcesContent":["import '../../stylus/components/_avatars.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Colorable).extend({\n  name: 'v-avatar',\n\n  functional: true,\n\n  props: {\n    // TODO: inherit these\n    color: String,\n\n    size: {\n      type: [Number, String],\n      default: 48\n    },\n    tile: Boolean\n  },\n\n  render (h, { data, props, children }): VNode {\n    data.staticClass = (`v-avatar ${data.staticClass || ''}`).trim()\n\n    if (props.tile) data.staticClass += ' v-avatar--tile'\n\n    const size = convertToUnit(props.size)\n    data.style = {\n      height: size,\n      width: size,\n      ...data.style\n    }\n\n    return h('div', Colorable.options.methods.setBackgroundColor(props.color, data), children)\n  }\n})\n"],"sourceRoot":""}]}