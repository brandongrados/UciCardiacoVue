{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\Vuetify\\mixins\\lang.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\Vuetify\\mixins\\lang.js","mtime":1590258019823},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport en from '../../../locale/en';\nimport { getObjectValueByPath } from '../../../util/helpers';\nimport { consoleError, consoleWarn } from '../../../util/console';\nvar LANG_PREFIX = '$vuetify.';\nvar fallback = Symbol('Lang fallback');\n\nfunction getTranslation(locale, key) {\n  var usingFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var shortKey = key.replace(LANG_PREFIX, '');\n  var translation = getObjectValueByPath(locale, shortKey, fallback);\n\n  if (translation === fallback) {\n    if (usingFallback) {\n      consoleError('Translation key \"' + shortKey + '\" not found in fallback');\n      translation = key;\n    } else {\n      consoleWarn('Translation key \"' + shortKey + '\" not found, falling back to default');\n      translation = getTranslation(en, key, true);\n    }\n  }\n\n  return translation;\n}\n\nexport default function lang() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    locales: Object.assign({\n      en: en\n    }, config.locales),\n    current: config.current || 'en',\n    t: function t(key) {\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      if (!key.startsWith(LANG_PREFIX)) return key;\n      if (config.t) return config.t.apply(config, [key].concat(_toConsumableArray(params)));\n      var translation = getTranslation(this.locales[this.current], key);\n      return translation.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        return String(params[+index]);\n      });\n    }\n  };\n}",{"version":3,"sources":["../../../../src/components/Vuetify/mixins/lang.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAA,EAAA,MAAA,oBAAA;AACA,SAAA,oBAAA,QAAA,uBAAA;AACA,SAAA,YAAA,EAAA,WAAA,QAAA,uBAAA;AAIA,IAAM,WAAA,GAAN,WAAA;AACA,IAAM,QAAA,GAAW,MAAA,CAAjB,eAAiB,CAAjB;;AAEA,SAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAkF;AAAA,MAArB,aAAqB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK;AAChF,MAAM,QAAA,GAAW,GAAA,CAAA,OAAA,CAAA,WAAA,EAAjB,EAAiB,CAAjB;AACA,MAAI,WAAA,GAAc,oBAAA,CAAA,MAAA,EAAA,QAAA,EAAlB,QAAkB,CAAlB;;AAEA,MAAI,WAAA,KAAJ,QAAA,EAA8B;AAC5B,QAAA,aAAA,EAAmB;AACjB,MAAA,YAAA,CAAA,sBAAA,QAAA,GAAA,yBAAA,CAAA;AACA,MAAA,WAAA,GAAA,GAAA;AAFF,KAAA,MAGO;AACL,MAAA,WAAA,CAAA,sBAAA,QAAA,GAAA,sCAAA,CAAA;AACA,MAAA,WAAA,GAAc,cAAA,CAAA,EAAA,EAAA,GAAA,EAAd,IAAc,CAAd;AACD;AACF;;AAED,SAAA,WAAA;AACD;;AAED,eAAc,SAAA,IAAA,GAA4C;AAAA,MAA5B,MAA4B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;AACxD,SAAO;AACL,IAAA,OAAA,EAAS,MAAA,CAAA,MAAA,CAAc;AAAE,MAAA,EAAA,EAAhB;AAAc,KAAd,EAAsB,MAAA,CAD1B,OACI,CADJ;AAEL,IAAA,OAAA,EAAS,MAAA,CAAA,OAAA,IAFJ,IAAA;AAGL,IAAA,CAHK,EAAA,SAAA,CAAA,CAAA,GAAA,EAGY;AAAA,WAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAN,MAAM,GAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAN,QAAA,MAAM,CAAA,IAAA,GAAA,CAAA,CAAN,GAAM,SAAA,CAAA,IAAA,CAAN;AAAM;;AACf,UAAI,CAAC,GAAA,CAAA,UAAA,CAAL,WAAK,CAAL,EAAkC,OAAA,GAAA;AAElC,UAAI,MAAA,CAAJ,CAAA,EAAc,OAAO,MAAA,CAAA,CAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,GAAA,EAAA,MAAA,CAAA,kBAAA,CAAP,MAAO,CAAA,CAAA,CAAP;AAEd,UAAM,WAAA,GAAc,cAAA,CAAe,KAAA,OAAA,CAAa,KAA5B,OAAe,CAAf,EAApB,GAAoB,CAApB;AAEA,aAAO,WAAA,CAAA,OAAA,CAAA,YAAA,EAAkC,UAAA,KAAA,EAAA,KAAA,EAAiC;AACxE,eAAO,MAAA,CAAO,MAAA,CAAO,CAArB,KAAc,CAAP,CAAP;AADF,OAAO,CAAP;AAGD;AAbI,GAAP;AAeD","sourcesContent":["import en from '../../../locale/en'\nimport { getObjectValueByPath } from '../../../util/helpers'\nimport { consoleError, consoleWarn } from '../../../util/console'\nimport { VuetifyUseOptions as Options } from 'vuetify/types'\nimport { VuetifyLanguage, VuetifyLocale } from 'vuetify/types/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (locale: VuetifyLocale, key: string, usingFallback = false): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingFallback) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(en, key, true)\n    }\n  }\n\n  return translation\n}\n\nexport default function lang (config: Options['lang'] = {}): VuetifyLanguage {\n  return {\n    locales: Object.assign({ en }, config.locales),\n    current: config.current || 'en',\n    t (key, ...params) {\n      if (!key.startsWith(LANG_PREFIX)) return key\n\n      if (config.t) return config.t(key, ...params)\n\n      const translation = getTranslation(this.locales[this.current], key)\n\n      return translation.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n        return String(params[+index])\n      })\n    }\n  }\n}\n"],"sourceRoot":""}]}