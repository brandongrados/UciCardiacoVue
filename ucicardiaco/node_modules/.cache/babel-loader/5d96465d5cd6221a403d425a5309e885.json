{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VImg\\VImg.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VImg\\VImg.js","mtime":1589651992280},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport '../../../src/stylus/components/_images.styl'; // Components\n\nimport VResponsive from '../VResponsive'; // Utils\n\nimport { consoleError, consoleWarn } from '../../util/console';\n/* @vue/component */\n\nexport default VResponsive.extend({\n  name: 'v-img',\n  props: {\n    alt: String,\n    contain: Boolean,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    gradient: String,\n    lazySrc: String,\n    srcset: String,\n    sizes: String,\n    position: {\n      type: String,\n      default: 'center center'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition'\n    }\n  },\n  data: function data() {\n    return {\n      currentSrc: '',\n      image: null,\n      isLoading: true,\n      calculatedAspectRatio: undefined\n    };\n  },\n  computed: {\n    computedAspectRatio: function computedAspectRatio() {\n      return this.normalisedSrc.aspect;\n    },\n    normalisedSrc: function normalisedSrc() {\n      return typeof this.src === 'string' ? {\n        src: this.src,\n        srcset: this.srcset,\n        lazySrc: this.lazySrc,\n        aspect: Number(this.aspectRatio || this.calculatedAspectRatio)\n      } : {\n        src: this.src.src,\n        srcset: this.srcset || this.src.srcset,\n        lazySrc: this.lazySrc || this.src.lazySrc,\n        aspect: Number(this.aspectRatio || this.src.aspect || this.calculatedAspectRatio)\n      };\n    },\n    __cachedImage: function __cachedImage() {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return [];\n      var backgroundImage = [];\n      var src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc;\n      if (this.gradient) backgroundImage.push('linear-gradient(' + this.gradient + ')');\n      if (src) backgroundImage.push('url(\"' + src + '\")');\n      var image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position\n        },\n        key: +this.isLoading\n      });\n      if (!this.transition) return image;\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out'\n        }\n      }, [image]);\n    }\n  },\n  watch: {\n    src: function src() {\n      if (!this.isLoading) this.init();else this.loadImage();\n    },\n    '$vuetify.breakpoint.width': 'getSrc'\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      if (this.normalisedSrc.lazySrc) {\n        var lazyImg = new Image();\n        lazyImg.src = this.normalisedSrc.lazySrc;\n        this.pollForSize(lazyImg, null);\n      }\n      /* istanbul ignore else */\n\n\n      if (this.normalisedSrc.src) this.loadImage();\n    },\n    onLoad: function onLoad() {\n      this.getSrc();\n      this.isLoading = false;\n      this.$emit('load', this.src);\n    },\n    onError: function onError() {\n      consoleError('Image load failed\\n\\n' + ('src: ' + this.normalisedSrc.src), this);\n      this.$emit('error', this.src);\n    },\n    getSrc: function getSrc() {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src;\n    },\n    loadImage: function loadImage() {\n      var _this = this;\n\n      var image = new Image();\n      this.image = image;\n\n      image.onload = function () {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch(function (err) {\n            consoleWarn('Failed to decode image, trying to render anyway\\n\\n' + ('src: ' + _this.normalisedSrc.src) + (err.message ? '\\nOriginal error: ' + err.message : ''), _this);\n          }).then(_this.onLoad);\n        } else {\n          _this.onLoad();\n        }\n      };\n\n      image.onerror = this.onError;\n      image.src = this.normalisedSrc.src;\n      this.sizes && (image.sizes = this.sizes);\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset);\n      this.aspectRatio || this.pollForSize(image);\n      this.getSrc();\n    },\n    pollForSize: function pollForSize(img) {\n      var _this2 = this;\n\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var poll = function poll() {\n        var naturalHeight = img.naturalHeight,\n            naturalWidth = img.naturalWidth;\n\n        if (naturalHeight || naturalWidth) {\n          _this2.calculatedAspectRatio = naturalWidth / naturalHeight;\n        } else {\n          timeout != null && setTimeout(poll, timeout);\n        }\n      };\n\n      poll();\n    },\n    __genPlaceholder: function __genPlaceholder() {\n      if (this.$slots.placeholder) {\n        var placeholder = this.isLoading ? [this.$createElement('div', {\n          staticClass: 'v-image__placeholder'\n        }, this.$slots.placeholder)] : [];\n        if (!this.transition) return placeholder[0];\n        return this.$createElement('transition', {\n          attrs: {\n            name: this.transition\n          }\n        }, placeholder);\n      }\n    }\n  },\n  render: function render(h) {\n    var node = VResponsive.options.render.call(this, h);\n    node.data.staticClass += ' v-image';\n    node.data.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt\n    };\n    node.children = [this.__cachedSizer, this.__cachedImage, this.__genPlaceholder(), this.genContent()];\n    return h(node.tag, node.data, node.children);\n  }\n});",{"version":3,"sources":["../../../src/components/VImg/VImg.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_images.styl'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Utils\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\n/* @vue/component */\nexport default VResponsive.extend({\n  name: 'v-img',\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    src: {\n      type: [String, Object],\n      default: ''\n    } as PropValidator<string | srcObject>,\n    gradient: String,\n    lazySrc: String,\n    srcset: String,\n    sizes: String,\n    position: {\n      type: String,\n      default: 'center center'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition'\n    }\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return this.normalisedSrc.aspect\n    },\n    normalisedSrc (): srcObject {\n      return typeof this.src === 'string'\n        ? {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || this.calculatedAspectRatio)\n        }\n        : {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect || this.calculatedAspectRatio)\n        }\n    },\n    __cachedImage (): VNode | never[] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position\n        },\n        key: +this.isLoading\n      })\n\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out'\n        }\n      }, [image])\n    }\n  },\n\n  watch: {\n    src () {\n      if (!this.isLoading) this.init()\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc'\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n    },\n    onError () {\n      consoleError(\n        `Image load failed\\n\\n` +\n        `src: ${this.normalisedSrc.src}`,\n        this\n      )\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      image.src = this.normalisedSrc.src\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else {\n          timeout != null && setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder'\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          attrs: { name: this.transition }\n        }, placeholder)\n      }\n    }\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    node.data.staticClass += ' v-image'\n\n    node.data.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt\n    }\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent()\n    ]\n\n    return h(node.tag, node.data, node.children)\n  }\n})\n"],"sourceRoot":""}]}