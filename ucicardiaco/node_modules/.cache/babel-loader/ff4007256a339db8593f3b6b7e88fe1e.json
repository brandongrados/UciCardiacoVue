{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\bootable.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\bootable.js","mtime":1590258019869},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590257978015},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1590257976698}],"contextDependencies":[],"result":["import Vue from 'vue';\n/**\r\n * Bootable\r\n * @mixin\r\n *\r\n * Used to add lazy content functionality to components\r\n * Looks for change in \"isActive\" to automatically boot\r\n * Otherwise can be set manually\r\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'bootable',\n  props: {\n    lazy: Boolean\n  },\n  data: function data() {\n    return {\n      isBooted: false\n    };\n  },\n  computed: {\n    hasContent: function hasContent() {\n      return this.isBooted || !this.lazy || this.isActive;\n    }\n  },\n  watch: {\n    isActive: function isActive() {\n      this.isBooted = true;\n    }\n  },\n  methods: {\n    showLazyContent: function showLazyContent(content) {\n      return this.hasContent ? content : undefined;\n    }\n  }\n});",{"version":3,"sources":["../../src/mixins/bootable.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAMA;;;;;;;;;AAQA;;AACA,eAAe,GAAA,CAAA,MAAA,GAAA,MAAA,CAAsC;AACnD,EAAA,IAAA,EADmD,UAAA;AAGnD,EAAA,KAAA,EAAO;AACL,IAAA,IAAA,EAAM;AADD,GAH4C;AAOnD,EAAA,IAAA,EAAM,SAAA,IAAA,GAAA;AAAA,WAAO;AACX,MAAA,QAAA,EAAU;AADC,KAAP;AAP6C,GAAA;AAWnD,EAAA,QAAA,EAAU;AACR,IAAA,UADQ,EAAA,SAAA,UAAA,GACE;AACR,aAAO,KAAA,QAAA,IAAiB,CAAC,KAAlB,IAAA,IAA+B,KAAtC,QAAA;AACD;AAHO,GAXyC;AAiBnD,EAAA,KAAA,EAAO;AACL,IAAA,QADK,EAAA,SAAA,QAAA,GACG;AACN,WAAA,QAAA,GAAA,IAAA;AACD;AAHI,GAjB4C;AAuBnD,EAAA,OAAA,EAAS;AACP,IAAA,eADO,EAAA,SAAA,eAAA,CAAA,OAAA,EAC0B;AAC/B,aAAO,KAAA,UAAA,GAAA,OAAA,GAAP,SAAA;AACD;AAHM;AAvB0C,CAAtC,CAAf","sourcesContent":["import Vue, { VNode } from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    lazy: Boolean\n  },\n\n  data: () => ({\n    isBooted: false\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || !this.lazy || this.isActive\n    }\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    }\n  },\n\n  methods: {\n    showLazyContent (content: VNode[]): VNode[] | undefined {\n      return this.hasContent ? content : undefined\n    }\n  }\n})\n"],"sourceRoot":""}]}