{"remainingRequest":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VResponsive\\VResponsive.js","dependencies":[{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\components\\VResponsive\\VResponsive.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bjavi\\source\\repos\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport '../../../src/stylus/components/_responsive.styl'; // Mixins\n\nimport Measurable from '../../mixins/measurable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n  props: {\n    aspectRatio: [String, Number]\n  },\n  computed: {\n    computedAspectRatio: function computedAspectRatio() {\n      return Number(this.aspectRatio);\n    },\n    aspectStyle: function aspectStyle() {\n      return this.computedAspectRatio ? {\n        paddingBottom: 1 / this.computedAspectRatio * 100 + '%'\n      } : undefined;\n    },\n    __cachedSizer: function __cachedSizer() {\n      if (!this.aspectStyle) return [];\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer'\n      });\n    }\n  },\n  methods: {\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content'\n      }, this.$slots.default);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: {\n        height: convertToUnit(this.height),\n        maxHeight: convertToUnit(this.maxHeight),\n        maxWidth: convertToUnit(this.maxWidth),\n        width: convertToUnit(this.width)\n      },\n      on: this.$listeners\n    }, [this.__cachedSizer, this.genContent()]);\n  }\n});",{"version":3,"sources":["../../../src/components/VResponsive/VResponsive.ts"],"names":[],"mappings":";AAAA,OAAA,iDAAA,C,CAEA;;AACA,OAAA,UAAA,MAAA,yBAAA,C,CAKA;;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,SAAA,aAAA,QAAA,oBAAA;AAEA;;AACA,eAAe,MAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAA0B;AACvC,EAAA,IAAA,EADuC,cAAA;AAGvC,EAAA,KAAA,EAAO;AACL,IAAA,WAAA,EAAa,CAAA,MAAA,EAAA,MAAA;AADR,GAHgC;AAOvC,EAAA,QAAA,EAAU;AACR,IAAA,mBADQ,EAAA,SAAA,mBAAA,GACW;AACjB,aAAO,MAAA,CAAO,KAAd,WAAO,CAAP;AAFM,KAAA;AAIR,IAAA,WAJQ,EAAA,SAAA,WAAA,GAIG;AACT,aAAO,KAAA,mBAAA,GACH;AAAE,QAAA,aAAA,EAAgB,IAAI,KAAL,mBAAC,GAAD,GAAC,GADf;AACH,OADG,GAAP,SAAA;AALM,KAAA;AASR,IAAA,aATQ,EAAA,SAAA,aAAA,GASK;AACX,UAAI,CAAC,KAAL,WAAA,EAAuB,OAAA,EAAA;AAEvB,aAAO,KAAA,cAAA,CAAA,KAAA,EAA2B;AAChC,QAAA,KAAA,EAAO,KADyB,WAAA;AAEhC,QAAA,WAAA,EAAa;AAFmB,OAA3B,CAAP;AAID;AAhBO,GAP6B;AA0BvC,EAAA,OAAA,EAAS;AACP,IAAA,UADO,EAAA,SAAA,UAAA,GACG;AACR,aAAO,KAAA,cAAA,CAAA,KAAA,EAA2B;AAChC,QAAA,WAAA,EAAa;AADmB,OAA3B,EAEJ,KAAA,MAAA,CAFH,OAAO,CAAP;AAGD;AALM,GA1B8B;AAkCvC,EAAA,MAlCuC,EAAA,SAAA,MAAA,CAAA,CAAA,EAkC9B;AACP,WAAO,CAAA,CAAA,KAAA,EAAS;AACd,MAAA,WAAA,EADc,cAAA;AAEd,MAAA,KAAA,EAAO;AACL,QAAA,MAAA,EAAQ,aAAA,CAAc,KADjB,MACG,CADH;AAEL,QAAA,SAAA,EAAW,aAAA,CAAc,KAFpB,SAEM,CAFN;AAGL,QAAA,QAAA,EAAU,aAAA,CAAc,KAHnB,QAGK,CAHL;AAIL,QAAA,KAAA,EAAO,aAAA,CAAc,KAAd,KAAA;AAJF,OAFO;AAQd,MAAA,EAAA,EAAI,KAAK;AARK,KAAT,EASJ,CACD,KADC,aAAA,EAED,KAXF,UAWE,EAFC,CATI,CAAP;AAaD;AAhDsC,CAA1B,CAAf","sourcesContent":["import '../../stylus/components/_responsive.styl'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | never[] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer'\n      })\n    }\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content'\n      }, this.$slots.default)\n    }\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: {\n        height: convertToUnit(this.height),\n        maxHeight: convertToUnit(this.maxHeight),\n        maxWidth: convertToUnit(this.maxWidth),\n        width: convertToUnit(this.width)\n      },\n      on: this.$listeners\n    }, [\n      this.__cachedSizer,\n      this.genContent()\n    ])\n  }\n})\n"],"sourceRoot":""}]}