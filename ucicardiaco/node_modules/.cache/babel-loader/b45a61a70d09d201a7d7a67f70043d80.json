{"remainingRequest":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\toggleable.js","dependencies":[{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\vuetify\\lib\\mixins\\toggleable.js","mtime":1589651993190},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589651934081},{"path":"C:\\Users\\manue\\Desktop\\UciCardiacoVue\\ucicardiaco\\node_modules\\babel-loader\\lib\\index.js","mtime":1589651931824}],"contextDependencies":[],"result":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from 'vue';\nexport function factory() {\n  var _watch;\n\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';\n  return Vue.extend({\n    name: 'toggleable',\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: _defineProperty({}, prop, {\n      required: false\n    }),\n    data: function data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {\n      this.isActive = !!val;\n    }), _defineProperty(_watch, 'isActive', function isActive(val) {\n      !!val !== this[prop] && this.$emit(event, val);\n    }), _watch)\n  });\n}\n/* eslint-disable-next-line no-redeclare */\n\nvar Toggleable = factory();\nexport default Toggleable;",{"version":3,"sources":["../../src/mixins/toggleable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAA,GAAA,MAAA,KAAA;AAMA,OAAM,SAAA,OAAA,GAAkD;AAAA,MAAA,MAAA;;AAAA,MAA/B,IAA+B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAxB,OAAwB;AAAA,MAAf,KAAe,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,OAAO;AACtD,SAAO,GAAA,CAAA,MAAA,CAAW;AAChB,IAAA,IAAA,EADgB,YAAA;AAGhB,IAAA,KAAA,EAAO;AAAE,MAAA,IAAA,EAAF,IAAA;AAAQ,MAAA,KAAA,EAHC;AAGT,KAHS;AAKhB,IAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,IAAA,EACU;AAAE,MAAA,QAAA,EANI;AAMN,KADV,CALgB;AAShB,IAAA,IATgB,EAAA,SAAA,IAAA,GASZ;AACF,aAAO;AACL,QAAA,QAAA,EAAU,CAAC,CAAC,KAAA,IAAA;AADP,OAAP;AAVc,KAAA;AAehB,IAAA,KAAA,GAAA,MAAA,GAAA,EAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,EAAA,UAAA,GAAA,EACa;AACT,WAAA,QAAA,GAAgB,CAAC,CAAjB,GAAA;AAFJ,KAAA,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,QAAA,CAAA,GAAA,EAIe;AACX,OAAC,CAAD,GAAA,KAAU,KAAV,IAAU,CAAV,IAAwB,KAAA,KAAA,CAAA,KAAA,EAAxB,GAAwB,CAAxB;AALJ,KAAA,CAAA,EAAA,MAAA;AAfgB,GAAX,CAAP;AAwBD;AAED;;AACA,IAAM,UAAA,GAAa,OAAnB,EAAA;AAEA,eAAA,UAAA","sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false }\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop]\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      }\n    }\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}]}