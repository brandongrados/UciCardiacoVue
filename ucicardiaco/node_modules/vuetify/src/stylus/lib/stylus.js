/*!
 * Stylus
 * Copyright (c) Automattic <developer.wordpress.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var Renderer = require('vuetify/src/stylus/lib/renderer')
  , nodes = require('vuetify/src/stylus/lib/nodes')
  , utils = require('vuetify/src/stylus/lib/utils');

/**
 * Export render as the module.
 */

exports = module.exports = render;

/**
 * Library version.
 */

exports.version = require('vuetify/src/stylus/package').version;

/**
 * Expose nodes.
 */

exports.nodes = nodes;

/**
 * Expose BIFs.
 */

exports.functions = require('vuetify/src/stylus/lib/functions');

/**
 * Expose utils.
 */

exports.utils = require('vuetify/src/stylus/lib/utils');

/**
 * Expose middleware.
 */

exports.middleware = require('vuetify/src/stylus/lib/middleware');

/**
 * Expose constructors.
 */

exports.Visitor = require('vuetify/src/stylus/lib/visitor');
exports.Parser = require('vuetify/src/stylus/lib/parser');
exports.Evaluator = require('vuetify/src/stylus/lib/visitor/evaluator');
exports.Normalizer = require('vuetify/src/stylus/lib/visitor/normalizer');
exports.Compiler = require('vuetify/src/stylus/lib/visitor/compiler');

/**
 * Convert the given `css` to `stylus` source.
 *
 * @param {String} css
 * @return {String}
 * @api public
 */

exports.convertCSS = require('vuetify/src/stylus/lib/convert/css');

/**
 * Render the given `str` with `options` and callback `fn(err, css)`.
 *
 * @param {String} str
 * @param {Object|Function} options
 * @param {Function} fn
 * @api public
 */

exports.render = function(str, options, fn){
  if ('function' == typeof options) fn = options, options = {};
  return new Renderer(str, options).render(fn);
};

/**
 * Return a new `Renderer` for the given `str` and `options`.
 *
 * @param {String} str
 * @param {Object} options
 * @return {Renderer}
 * @api public
 */

function render(str, options) {
  return new Renderer(str, options);
}

/**
 * Expose optional functions.
 */

exports.url = require('vuetify/src/stylus/lib/functions/url');
exports.resolver = require('vuetify/src/stylus/lib/functions/resolver');
